State 1 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | commands

    3 commands: commands command
    4         | command

    5 command: decl
    6        | action
    7        | control

    8 decl: decl_var
    9     | decl_func
   10     | decl_ref
   11     | decl_label

   12 type: STRING
   13     | INTEGER

   14 decl_var: namelist COLON STRING SEMICOLON
   15         | namelist COLON INTEGER SEMICOLON

   16 namelist: namelist COMA NAME
   17         | NAME

   18 decl_ref: NAME REF NAME COLON type SEMICOLON

   19 decl_label: LABEL NAME SEMICOLON

   20 $@1: /* empty */

   21 decl_func: NAME COLON INTEGER OBRACE $@1 chain_param CBRACE func_block

   22 $@2: /* empty */

   23 decl_func: NAME COLON STRING OBRACE $@2 chain_param CBRACE func_block

   24 $@3: /* empty */

   25 decl_func: NAME COLON STRING OBRACE $@3 CBRACE func_block

   26 $@4: /* empty */

   27 decl_func: NAME COLON INTEGER OBRACE $@4 CBRACE func_block

   28 chain_param: chain_param namelist_decl COLON INTEGER
   29            | chain_param namelist_decl COLON INTEGER SEMICOLON
   30            | chain_param namelist_decl COLON STRING
   31            | chain_param namelist_decl COLON STRING SEMICOLON
   32            | chain_param NAME REF COLON INTEGER SEMICOLON
   33            | chain_param NAME REF COLON INTEGER
   34            | chain_param NAME REF COLON STRING
   35            | chain_param NAME REF COLON STRING SEMICOLON
   36            | NAME REF COLON INTEGER
   37            | NAME REF COLON INTEGER SEMICOLON
   38            | NAME REF COLON STRING
   39            | namelist_decl COLON INTEGER SEMICOLON
   40            | namelist_decl COLON INTEGER
   41            | namelist_decl COLON STRING SEMICOLON
   42            | namelist_decl COLON STRING

   43 namelist_decl: namelist_decl COMA NAME
   44              | NAME

   45 block: BLOCK commands KCOLB
   46      | command

   47 $@5: /* empty */

   48 $@6: /* empty */

   49 func_block: BLOCK $@5 program RETURN expr $@6 SEMICOLON KCOLB

   50 action: assign
   51       | io
   52       | goto

   53 assign: NAME ASSIGN expr SEMICOLON

   54 io: READ OBRACE NAME CBRACE SEMICOLON
   55   | WRITE OBRACE expr CBRACE SEMICOLON

   56 goto: GOTO NAME SEMICOLON

   57 expr: mexpr

   58 mexpr: mexpr MUL mexpr
   59      | mexpr DIV mexpr
   60      | mexpr ADD mexpr
   61      | mexpr SUB mexpr
   62      | mexpr AND mexpr
   63      | mexpr OR mexpr
   64      | mexpr LT mexpr
   65      | mexpr LE mexpr
   66      | mexpr GT mexpr
   67      | mexpr GE mexpr
   68      | mexpr EQ mexpr
   69      | mexpr NE mexpr
   70      | NOT mexpr
   71      | OBRACE mexpr CBRACE
   72      | NUMBER
   73      | STRINGCONST
   74      | STRINGCONST RECOPENBRACE mexpr RECCLOSEBRACE
   75      | NAME
   76      | NAME RECOPENBRACE mexpr RECCLOSEBRACE

   77 $@7: /* empty */

   78 mexpr: NAME OBRACE $@7 act_params CBRACE

   79 act_params: /* empty */
   80           | act_params COMA expr
   81           | expr

   82 control: cond
   83        | cycle

   84 $@8: /* empty */

   85 $@9: /* empty */

   86 cond: IF expr $@8 THEN block $@9 ELSE block

   87 $@10: /* empty */

   88 $@11: /* empty */

   89 cycle: $@10 WHILE expr $@11 LOOP commands POOL


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 72
NAME (259) 16 17 18 19 21 23 25 27 32 33 34 35 36 37 38 43 44 53 54
    56 75 76 78
REF (260) 18 32 33 34 35 36 37 38
COLON (261) 14 15 18 21 23 25 27 28 29 30 31 32 33 34 35 36 37 38 39
    40 41 42
SEMICOLON (262) 14 15 18 19 29 31 32 35 37 39 41 49 53 54 55 56
STRINGCONST (263) 73 74
STRING (264) 12 14 23 25 30 31 34 35 38 41 42
INTEGER (265) 13 15 21 27 28 29 32 33 36 37 39 40
COMA (266) 16 43 80
RETURN (267) 49
ASSIGN (268) 53
IF (269) 86
WHILE (270) 89
LOOP (271) 89
POOL (272) 89
READ (273) 54
WRITE (274) 55
LABEL (275) 19
RECOPENBRACE (276) 74 76
RECCLOSEBRACE (277) 74 76
BLOCK (278) 45 49
KCOLB (279) 45 49
THEN (280) 86
ELSE (281) 86
GOTO (282) 56
OBRACE (283) 21 23 25 27 54 55 71 78
CBRACE (284) 21 23 25 27 54 55 71 78
OR (285) 63
AND (286) 62
NOT (287) 70
NE (288) 69
EQ (289) 68
GE (290) 67
LE (291) 65
GT (292) 66
LT (293) 64
SUB (294) 61
ADD (295) 60
DIV (296) 59
MUL (297) 58


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1 2, on right: 0 49
commands (45)
    on left: 3 4, on right: 2 3 45 89
command (46)
    on left: 5 6 7, on right: 3 4 46
decl (47)
    on left: 8 9 10 11, on right: 5
type (48)
    on left: 12 13, on right: 18
decl_var (49)
    on left: 14 15, on right: 8
namelist (50)
    on left: 16 17, on right: 14 15 16
decl_ref (51)
    on left: 18, on right: 10
decl_label (52)
    on left: 19, on right: 11
decl_func (53)
    on left: 21 23 25 27, on right: 9
$@1 (54)
    on left: 20, on right: 21
$@2 (55)
    on left: 22, on right: 23
$@3 (56)
    on left: 24, on right: 25
$@4 (57)
    on left: 26, on right: 27
chain_param (58)
    on left: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42, on right:
    21 23 28 29 30 31 32 33 34 35
namelist_decl (59)
    on left: 43 44, on right: 28 29 30 31 39 40 41 42 43
block (60)
    on left: 45 46, on right: 86
func_block (61)
    on left: 49, on right: 21 23 25 27
$@5 (62)
    on left: 47, on right: 49
$@6 (63)
    on left: 48, on right: 49
action (64)
    on left: 50 51 52, on right: 6
assign (65)
    on left: 53, on right: 50
io (66)
    on left: 54 55, on right: 51
goto (67)
    on left: 56, on right: 52
expr (68)
    on left: 57, on right: 49 53 55 80 81 86 89
mexpr (69)
    on left: 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75
    76 78, on right: 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 74
    76
$@7 (70)
    on left: 77, on right: 78
act_params (71)
    on left: 79 80 81, on right: 78 80
control (72)
    on left: 82 83, on right: 7
cond (73)
    on left: 86, on right: 82
$@8 (74)
    on left: 84, on right: 86
$@9 (75)
    on left: 85, on right: 86
cycle (76)
    on left: 89, on right: 83
$@10 (77)
    on left: 87, on right: 89
$@11 (78)
    on left: 88, on right: 89


state 0

    0 $accept: . program $end

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    GOTO   shift, and go to state 6

    WHILE     reduce using rule 87 ($@10)
    $default  reduce using rule 1 (program)

    program     go to state 7
    commands    go to state 8
    command     go to state 9
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@10        go to state 23


state 1

   17 namelist: NAME .
   18 decl_ref: NAME . REF NAME COLON type SEMICOLON
   21 decl_func: NAME . COLON INTEGER OBRACE $@1 chain_param CBRACE func_block
   23          | NAME . COLON STRING OBRACE $@2 chain_param CBRACE func_block
   25          | NAME . COLON STRING OBRACE $@3 CBRACE func_block
   27          | NAME . COLON INTEGER OBRACE $@4 CBRACE func_block
   53 assign: NAME . ASSIGN expr SEMICOLON

    REF     shift, and go to state 24
    COLON   shift, and go to state 25
    ASSIGN  shift, and go to state 26

    COLON     [reduce using rule 17 (namelist)]
    $default  reduce using rule 17 (namelist)


state 2

   86 cond: IF . expr $@8 THEN block $@9 ELSE block

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr   go to state 32
    mexpr  go to state 33


state 3

   54 io: READ . OBRACE NAME CBRACE SEMICOLON

    OBRACE  shift, and go to state 34


state 4

   55 io: WRITE . OBRACE expr CBRACE SEMICOLON

    OBRACE  shift, and go to state 35


state 5

   19 decl_label: LABEL . NAME SEMICOLON

    NAME  shift, and go to state 36


state 6

   56 goto: GOTO . NAME SEMICOLON

    NAME  shift, and go to state 37


state 7

    0 $accept: program . $end

    $end  shift, and go to state 38


state 8

    2 program: commands .
    3 commands: commands . command

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    GOTO   shift, and go to state 6

    WHILE     reduce using rule 87 ($@10)
    $default  reduce using rule 2 (program)

    command     go to state 39
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@10        go to state 23


state 9

    4 commands: command .

    $default  reduce using rule 4 (commands)


state 10

    5 command: decl .

    $default  reduce using rule 5 (command)


state 11

    8 decl: decl_var .

    $default  reduce using rule 8 (decl)


state 12

   14 decl_var: namelist . COLON STRING SEMICOLON
   15         | namelist . COLON INTEGER SEMICOLON
   16 namelist: namelist . COMA NAME

    COLON  shift, and go to state 40
    COMA   shift, and go to state 41


state 13

   10 decl: decl_ref .

    $default  reduce using rule 10 (decl)


state 14

   11 decl: decl_label .

    $default  reduce using rule 11 (decl)


state 15

    9 decl: decl_func .

    $default  reduce using rule 9 (decl)


state 16

    6 command: action .

    $default  reduce using rule 6 (command)


state 17

   50 action: assign .

    $default  reduce using rule 50 (action)


state 18

   51 action: io .

    $default  reduce using rule 51 (action)


state 19

   52 action: goto .

    $default  reduce using rule 52 (action)


state 20

    7 command: control .

    $default  reduce using rule 7 (command)


state 21

   82 control: cond .

    $default  reduce using rule 82 (control)


state 22

   83 control: cycle .

    $default  reduce using rule 83 (control)


state 23

   89 cycle: $@10 . WHILE expr $@11 LOOP commands POOL

    WHILE  shift, and go to state 42


state 24

   18 decl_ref: NAME REF . NAME COLON type SEMICOLON

    NAME  shift, and go to state 43


state 25

   21 decl_func: NAME COLON . INTEGER OBRACE $@1 chain_param CBRACE func_block
   23          | NAME COLON . STRING OBRACE $@2 chain_param CBRACE func_block
   25          | NAME COLON . STRING OBRACE $@3 CBRACE func_block
   27          | NAME COLON . INTEGER OBRACE $@4 CBRACE func_block

    STRING   shift, and go to state 44
    INTEGER  shift, and go to state 45


state 26

   53 assign: NAME ASSIGN . expr SEMICOLON

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr   go to state 46
    mexpr  go to state 33


state 27

   72 mexpr: NUMBER .

    $default  reduce using rule 72 (mexpr)


state 28

   75 mexpr: NAME .
   76      | NAME . RECOPENBRACE mexpr RECCLOSEBRACE
   78      | NAME . OBRACE $@7 act_params CBRACE

    RECOPENBRACE  shift, and go to state 47
    OBRACE        shift, and go to state 48

    $default  reduce using rule 75 (mexpr)


state 29

   73 mexpr: STRINGCONST .
   74      | STRINGCONST . RECOPENBRACE mexpr RECCLOSEBRACE

    RECOPENBRACE  shift, and go to state 49

    $default  reduce using rule 73 (mexpr)


state 30

   71 mexpr: OBRACE . mexpr CBRACE

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 50


state 31

   70 mexpr: NOT . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 51


state 32

   86 cond: IF expr . $@8 THEN block $@9 ELSE block

    $default  reduce using rule 84 ($@8)

    $@8  go to state 52


state 33

   57 expr: mexpr .
   58 mexpr: mexpr . MUL mexpr
   59      | mexpr . DIV mexpr
   60      | mexpr . ADD mexpr
   61      | mexpr . SUB mexpr
   62      | mexpr . AND mexpr
   63      | mexpr . OR mexpr
   64      | mexpr . LT mexpr
   65      | mexpr . LE mexpr
   66      | mexpr . GT mexpr
   67      | mexpr . GE mexpr
   68      | mexpr . EQ mexpr
   69      | mexpr . NE mexpr

    OR   shift, and go to state 53
    AND  shift, and go to state 54
    NE   shift, and go to state 55
    EQ   shift, and go to state 56
    GE   shift, and go to state 57
    LE   shift, and go to state 58
    GT   shift, and go to state 59
    LT   shift, and go to state 60
    SUB  shift, and go to state 61
    ADD  shift, and go to state 62
    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 57 (expr)


state 34

   54 io: READ OBRACE . NAME CBRACE SEMICOLON

    NAME  shift, and go to state 65


state 35

   55 io: WRITE OBRACE . expr CBRACE SEMICOLON

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr   go to state 66
    mexpr  go to state 33


state 36

   19 decl_label: LABEL NAME . SEMICOLON

    SEMICOLON  shift, and go to state 67


state 37

   56 goto: GOTO NAME . SEMICOLON

    SEMICOLON  shift, and go to state 68


state 38

    0 $accept: program $end .

    $default  accept


state 39

    3 commands: commands command .

    $default  reduce using rule 3 (commands)


state 40

   14 decl_var: namelist COLON . STRING SEMICOLON
   15         | namelist COLON . INTEGER SEMICOLON

    STRING   shift, and go to state 69
    INTEGER  shift, and go to state 70


state 41

   16 namelist: namelist COMA . NAME

    NAME  shift, and go to state 71


state 42

   89 cycle: $@10 WHILE . expr $@11 LOOP commands POOL

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr   go to state 72
    mexpr  go to state 33


state 43

   18 decl_ref: NAME REF NAME . COLON type SEMICOLON

    COLON  shift, and go to state 73


state 44

   23 decl_func: NAME COLON STRING . OBRACE $@2 chain_param CBRACE func_block
   25          | NAME COLON STRING . OBRACE $@3 CBRACE func_block

    OBRACE  shift, and go to state 74


state 45

   21 decl_func: NAME COLON INTEGER . OBRACE $@1 chain_param CBRACE func_block
   27          | NAME COLON INTEGER . OBRACE $@4 CBRACE func_block

    OBRACE  shift, and go to state 75


state 46

   53 assign: NAME ASSIGN expr . SEMICOLON

    SEMICOLON  shift, and go to state 76


state 47

   76 mexpr: NAME RECOPENBRACE . mexpr RECCLOSEBRACE

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 77


state 48

   78 mexpr: NAME OBRACE . $@7 act_params CBRACE

    $default  reduce using rule 77 ($@7)

    $@7  go to state 78


state 49

   74 mexpr: STRINGCONST RECOPENBRACE . mexpr RECCLOSEBRACE

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 79


state 50

   58 mexpr: mexpr . MUL mexpr
   59      | mexpr . DIV mexpr
   60      | mexpr . ADD mexpr
   61      | mexpr . SUB mexpr
   62      | mexpr . AND mexpr
   63      | mexpr . OR mexpr
   64      | mexpr . LT mexpr
   65      | mexpr . LE mexpr
   66      | mexpr . GT mexpr
   67      | mexpr . GE mexpr
   68      | mexpr . EQ mexpr
   69      | mexpr . NE mexpr
   71      | OBRACE mexpr . CBRACE

    CBRACE  shift, and go to state 80
    OR      shift, and go to state 53
    AND     shift, and go to state 54
    NE      shift, and go to state 55
    EQ      shift, and go to state 56
    GE      shift, and go to state 57
    LE      shift, and go to state 58
    GT      shift, and go to state 59
    LT      shift, and go to state 60
    SUB     shift, and go to state 61
    ADD     shift, and go to state 62
    DIV     shift, and go to state 63
    MUL     shift, and go to state 64


state 51

   58 mexpr: mexpr . MUL mexpr
   59      | mexpr . DIV mexpr
   60      | mexpr . ADD mexpr
   61      | mexpr . SUB mexpr
   62      | mexpr . AND mexpr
   63      | mexpr . OR mexpr
   64      | mexpr . LT mexpr
   65      | mexpr . LE mexpr
   66      | mexpr . GT mexpr
   67      | mexpr . GE mexpr
   68      | mexpr . EQ mexpr
   69      | mexpr . NE mexpr
   70      | NOT mexpr .

    NE   shift, and go to state 55
    EQ   shift, and go to state 56
    GE   shift, and go to state 57
    LE   shift, and go to state 58
    GT   shift, and go to state 59
    LT   shift, and go to state 60
    SUB  shift, and go to state 61
    ADD  shift, and go to state 62
    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 70 (mexpr)


state 52

   86 cond: IF expr $@8 . THEN block $@9 ELSE block

    THEN  shift, and go to state 81


state 53

   63 mexpr: mexpr OR . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 82


state 54

   62 mexpr: mexpr AND . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 83


state 55

   69 mexpr: mexpr NE . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 84


state 56

   68 mexpr: mexpr EQ . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 85


state 57

   67 mexpr: mexpr GE . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 86


state 58

   65 mexpr: mexpr LE . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 87


state 59

   66 mexpr: mexpr GT . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 88


state 60

   64 mexpr: mexpr LT . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 89


state 61

   61 mexpr: mexpr SUB . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 90


state 62

   60 mexpr: mexpr ADD . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 91


state 63

   59 mexpr: mexpr DIV . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 92


state 64

   58 mexpr: mexpr MUL . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 93


state 65

   54 io: READ OBRACE NAME . CBRACE SEMICOLON

    CBRACE  shift, and go to state 94


state 66

   55 io: WRITE OBRACE expr . CBRACE SEMICOLON

    CBRACE  shift, and go to state 95


state 67

   19 decl_label: LABEL NAME SEMICOLON .

    $default  reduce using rule 19 (decl_label)


state 68

   56 goto: GOTO NAME SEMICOLON .

    $default  reduce using rule 56 (goto)


state 69

   14 decl_var: namelist COLON STRING . SEMICOLON

    SEMICOLON  shift, and go to state 96


state 70

   15 decl_var: namelist COLON INTEGER . SEMICOLON

    SEMICOLON  shift, and go to state 97


state 71

   16 namelist: namelist COMA NAME .

    $default  reduce using rule 16 (namelist)


state 72

   89 cycle: $@10 WHILE expr . $@11 LOOP commands POOL

    $default  reduce using rule 88 ($@11)

    $@11  go to state 98


state 73

   18 decl_ref: NAME REF NAME COLON . type SEMICOLON

    STRING   shift, and go to state 99
    INTEGER  shift, and go to state 100

    type  go to state 101


state 74

   23 decl_func: NAME COLON STRING OBRACE . $@2 chain_param CBRACE func_block
   25          | NAME COLON STRING OBRACE . $@3 CBRACE func_block

    CBRACE    reduce using rule 24 ($@3)
    $default  reduce using rule 22 ($@2)

    $@2  go to state 102
    $@3  go to state 103


state 75

   21 decl_func: NAME COLON INTEGER OBRACE . $@1 chain_param CBRACE func_block
   27          | NAME COLON INTEGER OBRACE . $@4 CBRACE func_block

    CBRACE    reduce using rule 26 ($@4)
    $default  reduce using rule 20 ($@1)

    $@1  go to state 104
    $@4  go to state 105


state 76

   53 assign: NAME ASSIGN expr SEMICOLON .

    $default  reduce using rule 53 (assign)


state 77

   58 mexpr: mexpr . MUL mexpr
   59      | mexpr . DIV mexpr
   60      | mexpr . ADD mexpr
   61      | mexpr . SUB mexpr
   62      | mexpr . AND mexpr
   63      | mexpr . OR mexpr
   64      | mexpr . LT mexpr
   65      | mexpr . LE mexpr
   66      | mexpr . GT mexpr
   67      | mexpr . GE mexpr
   68      | mexpr . EQ mexpr
   69      | mexpr . NE mexpr
   76      | NAME RECOPENBRACE mexpr . RECCLOSEBRACE

    RECCLOSEBRACE  shift, and go to state 106
    OR             shift, and go to state 53
    AND            shift, and go to state 54
    NE             shift, and go to state 55
    EQ             shift, and go to state 56
    GE             shift, and go to state 57
    LE             shift, and go to state 58
    GT             shift, and go to state 59
    LT             shift, and go to state 60
    SUB            shift, and go to state 61
    ADD            shift, and go to state 62
    DIV            shift, and go to state 63
    MUL            shift, and go to state 64


state 78

   78 mexpr: NAME OBRACE $@7 . act_params CBRACE

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    $default  reduce using rule 79 (act_params)

    expr        go to state 107
    mexpr       go to state 33
    act_params  go to state 108


state 79

   58 mexpr: mexpr . MUL mexpr
   59      | mexpr . DIV mexpr
   60      | mexpr . ADD mexpr
   61      | mexpr . SUB mexpr
   62      | mexpr . AND mexpr
   63      | mexpr . OR mexpr
   64      | mexpr . LT mexpr
   65      | mexpr . LE mexpr
   66      | mexpr . GT mexpr
   67      | mexpr . GE mexpr
   68      | mexpr . EQ mexpr
   69      | mexpr . NE mexpr
   74      | STRINGCONST RECOPENBRACE mexpr . RECCLOSEBRACE

    RECCLOSEBRACE  shift, and go to state 109
    OR             shift, and go to state 53
    AND            shift, and go to state 54
    NE             shift, and go to state 55
    EQ             shift, and go to state 56
    GE             shift, and go to state 57
    LE             shift, and go to state 58
    GT             shift, and go to state 59
    LT             shift, and go to state 60
    SUB            shift, and go to state 61
    ADD            shift, and go to state 62
    DIV            shift, and go to state 63
    MUL            shift, and go to state 64


state 80

   71 mexpr: OBRACE mexpr CBRACE .

    $default  reduce using rule 71 (mexpr)


state 81

   86 cond: IF expr $@8 THEN . block $@9 ELSE block

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    BLOCK  shift, and go to state 110
    GOTO   shift, and go to state 6

    $default  reduce using rule 87 ($@10)

    command     go to state 111
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    block       go to state 112
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@10        go to state 23


state 82

   58 mexpr: mexpr . MUL mexpr
   59      | mexpr . DIV mexpr
   60      | mexpr . ADD mexpr
   61      | mexpr . SUB mexpr
   62      | mexpr . AND mexpr
   63      | mexpr . OR mexpr
   63      | mexpr OR mexpr .
   64      | mexpr . LT mexpr
   65      | mexpr . LE mexpr
   66      | mexpr . GT mexpr
   67      | mexpr . GE mexpr
   68      | mexpr . EQ mexpr
   69      | mexpr . NE mexpr

    NE   shift, and go to state 55
    EQ   shift, and go to state 56
    GE   shift, and go to state 57
    LE   shift, and go to state 58
    GT   shift, and go to state 59
    LT   shift, and go to state 60
    SUB  shift, and go to state 61
    ADD  shift, and go to state 62
    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 63 (mexpr)


state 83

   58 mexpr: mexpr . MUL mexpr
   59      | mexpr . DIV mexpr
   60      | mexpr . ADD mexpr
   61      | mexpr . SUB mexpr
   62      | mexpr . AND mexpr
   62      | mexpr AND mexpr .
   63      | mexpr . OR mexpr
   64      | mexpr . LT mexpr
   65      | mexpr . LE mexpr
   66      | mexpr . GT mexpr
   67      | mexpr . GE mexpr
   68      | mexpr . EQ mexpr
   69      | mexpr . NE mexpr

    NE   shift, and go to state 55
    EQ   shift, and go to state 56
    GE   shift, and go to state 57
    LE   shift, and go to state 58
    GT   shift, and go to state 59
    LT   shift, and go to state 60
    SUB  shift, and go to state 61
    ADD  shift, and go to state 62
    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 62 (mexpr)


state 84

   58 mexpr: mexpr . MUL mexpr
   59      | mexpr . DIV mexpr
   60      | mexpr . ADD mexpr
   61      | mexpr . SUB mexpr
   62      | mexpr . AND mexpr
   63      | mexpr . OR mexpr
   64      | mexpr . LT mexpr
   65      | mexpr . LE mexpr
   66      | mexpr . GT mexpr
   67      | mexpr . GE mexpr
   68      | mexpr . EQ mexpr
   69      | mexpr . NE mexpr
   69      | mexpr NE mexpr .

    SUB  shift, and go to state 61
    ADD  shift, and go to state 62
    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 69 (mexpr)


state 85

   58 mexpr: mexpr . MUL mexpr
   59      | mexpr . DIV mexpr
   60      | mexpr . ADD mexpr
   61      | mexpr . SUB mexpr
   62      | mexpr . AND mexpr
   63      | mexpr . OR mexpr
   64      | mexpr . LT mexpr
   65      | mexpr . LE mexpr
   66      | mexpr . GT mexpr
   67      | mexpr . GE mexpr
   68      | mexpr . EQ mexpr
   68      | mexpr EQ mexpr .
   69      | mexpr . NE mexpr

    SUB  shift, and go to state 61
    ADD  shift, and go to state 62
    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 68 (mexpr)


state 86

   58 mexpr: mexpr . MUL mexpr
   59      | mexpr . DIV mexpr
   60      | mexpr . ADD mexpr
   61      | mexpr . SUB mexpr
   62      | mexpr . AND mexpr
   63      | mexpr . OR mexpr
   64      | mexpr . LT mexpr
   65      | mexpr . LE mexpr
   66      | mexpr . GT mexpr
   67      | mexpr . GE mexpr
   67      | mexpr GE mexpr .
   68      | mexpr . EQ mexpr
   69      | mexpr . NE mexpr

    SUB  shift, and go to state 61
    ADD  shift, and go to state 62
    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 67 (mexpr)


state 87

   58 mexpr: mexpr . MUL mexpr
   59      | mexpr . DIV mexpr
   60      | mexpr . ADD mexpr
   61      | mexpr . SUB mexpr
   62      | mexpr . AND mexpr
   63      | mexpr . OR mexpr
   64      | mexpr . LT mexpr
   65      | mexpr . LE mexpr
   65      | mexpr LE mexpr .
   66      | mexpr . GT mexpr
   67      | mexpr . GE mexpr
   68      | mexpr . EQ mexpr
   69      | mexpr . NE mexpr

    SUB  shift, and go to state 61
    ADD  shift, and go to state 62
    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 65 (mexpr)


state 88

   58 mexpr: mexpr . MUL mexpr
   59      | mexpr . DIV mexpr
   60      | mexpr . ADD mexpr
   61      | mexpr . SUB mexpr
   62      | mexpr . AND mexpr
   63      | mexpr . OR mexpr
   64      | mexpr . LT mexpr
   65      | mexpr . LE mexpr
   66      | mexpr . GT mexpr
   66      | mexpr GT mexpr .
   67      | mexpr . GE mexpr
   68      | mexpr . EQ mexpr
   69      | mexpr . NE mexpr

    SUB  shift, and go to state 61
    ADD  shift, and go to state 62
    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 66 (mexpr)


state 89

   58 mexpr: mexpr . MUL mexpr
   59      | mexpr . DIV mexpr
   60      | mexpr . ADD mexpr
   61      | mexpr . SUB mexpr
   62      | mexpr . AND mexpr
   63      | mexpr . OR mexpr
   64      | mexpr . LT mexpr
   64      | mexpr LT mexpr .
   65      | mexpr . LE mexpr
   66      | mexpr . GT mexpr
   67      | mexpr . GE mexpr
   68      | mexpr . EQ mexpr
   69      | mexpr . NE mexpr

    SUB  shift, and go to state 61
    ADD  shift, and go to state 62
    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 64 (mexpr)


state 90

   58 mexpr: mexpr . MUL mexpr
   59      | mexpr . DIV mexpr
   60      | mexpr . ADD mexpr
   61      | mexpr . SUB mexpr
   61      | mexpr SUB mexpr .
   62      | mexpr . AND mexpr
   63      | mexpr . OR mexpr
   64      | mexpr . LT mexpr
   65      | mexpr . LE mexpr
   66      | mexpr . GT mexpr
   67      | mexpr . GE mexpr
   68      | mexpr . EQ mexpr
   69      | mexpr . NE mexpr

    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 61 (mexpr)


state 91

   58 mexpr: mexpr . MUL mexpr
   59      | mexpr . DIV mexpr
   60      | mexpr . ADD mexpr
   60      | mexpr ADD mexpr .
   61      | mexpr . SUB mexpr
   62      | mexpr . AND mexpr
   63      | mexpr . OR mexpr
   64      | mexpr . LT mexpr
   65      | mexpr . LE mexpr
   66      | mexpr . GT mexpr
   67      | mexpr . GE mexpr
   68      | mexpr . EQ mexpr
   69      | mexpr . NE mexpr

    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 60 (mexpr)


state 92

   58 mexpr: mexpr . MUL mexpr
   59      | mexpr . DIV mexpr
   59      | mexpr DIV mexpr .
   60      | mexpr . ADD mexpr
   61      | mexpr . SUB mexpr
   62      | mexpr . AND mexpr
   63      | mexpr . OR mexpr
   64      | mexpr . LT mexpr
   65      | mexpr . LE mexpr
   66      | mexpr . GT mexpr
   67      | mexpr . GE mexpr
   68      | mexpr . EQ mexpr
   69      | mexpr . NE mexpr

    $default  reduce using rule 59 (mexpr)


state 93

   58 mexpr: mexpr . MUL mexpr
   58      | mexpr MUL mexpr .
   59      | mexpr . DIV mexpr
   60      | mexpr . ADD mexpr
   61      | mexpr . SUB mexpr
   62      | mexpr . AND mexpr
   63      | mexpr . OR mexpr
   64      | mexpr . LT mexpr
   65      | mexpr . LE mexpr
   66      | mexpr . GT mexpr
   67      | mexpr . GE mexpr
   68      | mexpr . EQ mexpr
   69      | mexpr . NE mexpr

    $default  reduce using rule 58 (mexpr)


state 94

   54 io: READ OBRACE NAME CBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 113


state 95

   55 io: WRITE OBRACE expr CBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 114


state 96

   14 decl_var: namelist COLON STRING SEMICOLON .

    $default  reduce using rule 14 (decl_var)


state 97

   15 decl_var: namelist COLON INTEGER SEMICOLON .

    $default  reduce using rule 15 (decl_var)


state 98

   89 cycle: $@10 WHILE expr $@11 . LOOP commands POOL

    LOOP  shift, and go to state 115


state 99

   12 type: STRING .

    $default  reduce using rule 12 (type)


state 100

   13 type: INTEGER .

    $default  reduce using rule 13 (type)


state 101

   18 decl_ref: NAME REF NAME COLON type . SEMICOLON

    SEMICOLON  shift, and go to state 116


state 102

   23 decl_func: NAME COLON STRING OBRACE $@2 . chain_param CBRACE func_block

    NAME  shift, and go to state 117

    chain_param    go to state 118
    namelist_decl  go to state 119


state 103

   25 decl_func: NAME COLON STRING OBRACE $@3 . CBRACE func_block

    CBRACE  shift, and go to state 120


state 104

   21 decl_func: NAME COLON INTEGER OBRACE $@1 . chain_param CBRACE func_block

    NAME  shift, and go to state 117

    chain_param    go to state 121
    namelist_decl  go to state 119


state 105

   27 decl_func: NAME COLON INTEGER OBRACE $@4 . CBRACE func_block

    CBRACE  shift, and go to state 122


state 106

   76 mexpr: NAME RECOPENBRACE mexpr RECCLOSEBRACE .

    $default  reduce using rule 76 (mexpr)


state 107

   81 act_params: expr .

    $default  reduce using rule 81 (act_params)


state 108

   78 mexpr: NAME OBRACE $@7 act_params . CBRACE
   80 act_params: act_params . COMA expr

    COMA    shift, and go to state 123
    CBRACE  shift, and go to state 124


state 109

   74 mexpr: STRINGCONST RECOPENBRACE mexpr RECCLOSEBRACE .

    $default  reduce using rule 74 (mexpr)


state 110

   45 block: BLOCK . commands KCOLB

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    GOTO   shift, and go to state 6

    $default  reduce using rule 87 ($@10)

    commands    go to state 125
    command     go to state 9
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@10        go to state 23


state 111

   46 block: command .

    $default  reduce using rule 46 (block)


state 112

   86 cond: IF expr $@8 THEN block . $@9 ELSE block

    $default  reduce using rule 85 ($@9)

    $@9  go to state 126


state 113

   54 io: READ OBRACE NAME CBRACE SEMICOLON .

    $default  reduce using rule 54 (io)


state 114

   55 io: WRITE OBRACE expr CBRACE SEMICOLON .

    $default  reduce using rule 55 (io)


state 115

   89 cycle: $@10 WHILE expr $@11 LOOP . commands POOL

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    GOTO   shift, and go to state 6

    $default  reduce using rule 87 ($@10)

    commands    go to state 127
    command     go to state 9
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@10        go to state 23


state 116

   18 decl_ref: NAME REF NAME COLON type SEMICOLON .

    $default  reduce using rule 18 (decl_ref)


state 117

   36 chain_param: NAME . REF COLON INTEGER
   37            | NAME . REF COLON INTEGER SEMICOLON
   38            | NAME . REF COLON STRING
   44 namelist_decl: NAME .

    REF  shift, and go to state 128

    $default  reduce using rule 44 (namelist_decl)


state 118

   23 decl_func: NAME COLON STRING OBRACE $@2 chain_param . CBRACE func_block
   28 chain_param: chain_param . namelist_decl COLON INTEGER
   29            | chain_param . namelist_decl COLON INTEGER SEMICOLON
   30            | chain_param . namelist_decl COLON STRING
   31            | chain_param . namelist_decl COLON STRING SEMICOLON
   32            | chain_param . NAME REF COLON INTEGER SEMICOLON
   33            | chain_param . NAME REF COLON INTEGER
   34            | chain_param . NAME REF COLON STRING
   35            | chain_param . NAME REF COLON STRING SEMICOLON

    NAME    shift, and go to state 129
    CBRACE  shift, and go to state 130

    namelist_decl  go to state 131


state 119

   39 chain_param: namelist_decl . COLON INTEGER SEMICOLON
   40            | namelist_decl . COLON INTEGER
   41            | namelist_decl . COLON STRING SEMICOLON
   42            | namelist_decl . COLON STRING
   43 namelist_decl: namelist_decl . COMA NAME

    COLON  shift, and go to state 132
    COMA   shift, and go to state 133


state 120

   25 decl_func: NAME COLON STRING OBRACE $@3 CBRACE . func_block

    BLOCK  shift, and go to state 134

    func_block  go to state 135


state 121

   21 decl_func: NAME COLON INTEGER OBRACE $@1 chain_param . CBRACE func_block
   28 chain_param: chain_param . namelist_decl COLON INTEGER
   29            | chain_param . namelist_decl COLON INTEGER SEMICOLON
   30            | chain_param . namelist_decl COLON STRING
   31            | chain_param . namelist_decl COLON STRING SEMICOLON
   32            | chain_param . NAME REF COLON INTEGER SEMICOLON
   33            | chain_param . NAME REF COLON INTEGER
   34            | chain_param . NAME REF COLON STRING
   35            | chain_param . NAME REF COLON STRING SEMICOLON

    NAME    shift, and go to state 129
    CBRACE  shift, and go to state 136

    namelist_decl  go to state 131


state 122

   27 decl_func: NAME COLON INTEGER OBRACE $@4 CBRACE . func_block

    BLOCK  shift, and go to state 134

    func_block  go to state 137


state 123

   80 act_params: act_params COMA . expr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr   go to state 138
    mexpr  go to state 33


state 124

   78 mexpr: NAME OBRACE $@7 act_params CBRACE .

    $default  reduce using rule 78 (mexpr)


state 125

    3 commands: commands . command
   45 block: BLOCK commands . KCOLB

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    KCOLB  shift, and go to state 139
    GOTO   shift, and go to state 6

    $default  reduce using rule 87 ($@10)

    command     go to state 39
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@10        go to state 23


state 126

   86 cond: IF expr $@8 THEN block $@9 . ELSE block

    ELSE  shift, and go to state 140


state 127

    3 commands: commands . command
   89 cycle: $@10 WHILE expr $@11 LOOP commands . POOL

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    POOL   shift, and go to state 141
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    GOTO   shift, and go to state 6

    $default  reduce using rule 87 ($@10)

    command     go to state 39
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@10        go to state 23


state 128

   36 chain_param: NAME REF . COLON INTEGER
   37            | NAME REF . COLON INTEGER SEMICOLON
   38            | NAME REF . COLON STRING

    COLON  shift, and go to state 142


state 129

   32 chain_param: chain_param NAME . REF COLON INTEGER SEMICOLON
   33            | chain_param NAME . REF COLON INTEGER
   34            | chain_param NAME . REF COLON STRING
   35            | chain_param NAME . REF COLON STRING SEMICOLON
   44 namelist_decl: NAME .

    REF  shift, and go to state 143

    $default  reduce using rule 44 (namelist_decl)


state 130

   23 decl_func: NAME COLON STRING OBRACE $@2 chain_param CBRACE . func_block

    BLOCK  shift, and go to state 134

    func_block  go to state 144


state 131

   28 chain_param: chain_param namelist_decl . COLON INTEGER
   29            | chain_param namelist_decl . COLON INTEGER SEMICOLON
   30            | chain_param namelist_decl . COLON STRING
   31            | chain_param namelist_decl . COLON STRING SEMICOLON
   43 namelist_decl: namelist_decl . COMA NAME

    COLON  shift, and go to state 145
    COMA   shift, and go to state 133


state 132

   39 chain_param: namelist_decl COLON . INTEGER SEMICOLON
   40            | namelist_decl COLON . INTEGER
   41            | namelist_decl COLON . STRING SEMICOLON
   42            | namelist_decl COLON . STRING

    STRING   shift, and go to state 146
    INTEGER  shift, and go to state 147


state 133

   43 namelist_decl: namelist_decl COMA . NAME

    NAME  shift, and go to state 148


state 134

   49 func_block: BLOCK . $@5 program RETURN expr $@6 SEMICOLON KCOLB

    $default  reduce using rule 47 ($@5)

    $@5  go to state 149


state 135

   25 decl_func: NAME COLON STRING OBRACE $@3 CBRACE func_block .

    $default  reduce using rule 25 (decl_func)


state 136

   21 decl_func: NAME COLON INTEGER OBRACE $@1 chain_param CBRACE . func_block

    BLOCK  shift, and go to state 134

    func_block  go to state 150


state 137

   27 decl_func: NAME COLON INTEGER OBRACE $@4 CBRACE func_block .

    $default  reduce using rule 27 (decl_func)


state 138

   80 act_params: act_params COMA expr .

    $default  reduce using rule 80 (act_params)


state 139

   45 block: BLOCK commands KCOLB .

    $default  reduce using rule 45 (block)


state 140

   86 cond: IF expr $@8 THEN block $@9 ELSE . block

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    BLOCK  shift, and go to state 110
    GOTO   shift, and go to state 6

    $default  reduce using rule 87 ($@10)

    command     go to state 111
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    block       go to state 151
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@10        go to state 23


state 141

   89 cycle: $@10 WHILE expr $@11 LOOP commands POOL .

    $default  reduce using rule 89 (cycle)


state 142

   36 chain_param: NAME REF COLON . INTEGER
   37            | NAME REF COLON . INTEGER SEMICOLON
   38            | NAME REF COLON . STRING

    STRING   shift, and go to state 152
    INTEGER  shift, and go to state 153


state 143

   32 chain_param: chain_param NAME REF . COLON INTEGER SEMICOLON
   33            | chain_param NAME REF . COLON INTEGER
   34            | chain_param NAME REF . COLON STRING
   35            | chain_param NAME REF . COLON STRING SEMICOLON

    COLON  shift, and go to state 154


state 144

   23 decl_func: NAME COLON STRING OBRACE $@2 chain_param CBRACE func_block .

    $default  reduce using rule 23 (decl_func)


state 145

   28 chain_param: chain_param namelist_decl COLON . INTEGER
   29            | chain_param namelist_decl COLON . INTEGER SEMICOLON
   30            | chain_param namelist_decl COLON . STRING
   31            | chain_param namelist_decl COLON . STRING SEMICOLON

    STRING   shift, and go to state 155
    INTEGER  shift, and go to state 156


state 146

   41 chain_param: namelist_decl COLON STRING . SEMICOLON
   42            | namelist_decl COLON STRING .

    SEMICOLON  shift, and go to state 157

    $default  reduce using rule 42 (chain_param)


state 147

   39 chain_param: namelist_decl COLON INTEGER . SEMICOLON
   40            | namelist_decl COLON INTEGER .

    SEMICOLON  shift, and go to state 158

    $default  reduce using rule 40 (chain_param)


state 148

   43 namelist_decl: namelist_decl COMA NAME .

    $default  reduce using rule 43 (namelist_decl)


state 149

   49 func_block: BLOCK $@5 . program RETURN expr $@6 SEMICOLON KCOLB

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    GOTO   shift, and go to state 6

    WHILE     reduce using rule 87 ($@10)
    $default  reduce using rule 1 (program)

    program     go to state 159
    commands    go to state 8
    command     go to state 9
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@10        go to state 23


state 150

   21 decl_func: NAME COLON INTEGER OBRACE $@1 chain_param CBRACE func_block .

    $default  reduce using rule 21 (decl_func)


state 151

   86 cond: IF expr $@8 THEN block $@9 ELSE block .

    $default  reduce using rule 86 (cond)


state 152

   38 chain_param: NAME REF COLON STRING .

    $default  reduce using rule 38 (chain_param)


state 153

   36 chain_param: NAME REF COLON INTEGER .
   37            | NAME REF COLON INTEGER . SEMICOLON

    SEMICOLON  shift, and go to state 160

    $default  reduce using rule 36 (chain_param)


state 154

   32 chain_param: chain_param NAME REF COLON . INTEGER SEMICOLON
   33            | chain_param NAME REF COLON . INTEGER
   34            | chain_param NAME REF COLON . STRING
   35            | chain_param NAME REF COLON . STRING SEMICOLON

    STRING   shift, and go to state 161
    INTEGER  shift, and go to state 162


state 155

   30 chain_param: chain_param namelist_decl COLON STRING .
   31            | chain_param namelist_decl COLON STRING . SEMICOLON

    SEMICOLON  shift, and go to state 163

    $default  reduce using rule 30 (chain_param)


state 156

   28 chain_param: chain_param namelist_decl COLON INTEGER .
   29            | chain_param namelist_decl COLON INTEGER . SEMICOLON

    SEMICOLON  shift, and go to state 164

    $default  reduce using rule 28 (chain_param)


state 157

   41 chain_param: namelist_decl COLON STRING SEMICOLON .

    $default  reduce using rule 41 (chain_param)


state 158

   39 chain_param: namelist_decl COLON INTEGER SEMICOLON .

    $default  reduce using rule 39 (chain_param)


state 159

   49 func_block: BLOCK $@5 program . RETURN expr $@6 SEMICOLON KCOLB

    RETURN  shift, and go to state 165


state 160

   37 chain_param: NAME REF COLON INTEGER SEMICOLON .

    $default  reduce using rule 37 (chain_param)


state 161

   34 chain_param: chain_param NAME REF COLON STRING .
   35            | chain_param NAME REF COLON STRING . SEMICOLON

    SEMICOLON  shift, and go to state 166

    $default  reduce using rule 34 (chain_param)


state 162

   32 chain_param: chain_param NAME REF COLON INTEGER . SEMICOLON
   33            | chain_param NAME REF COLON INTEGER .

    SEMICOLON  shift, and go to state 167

    $default  reduce using rule 33 (chain_param)


state 163

   31 chain_param: chain_param namelist_decl COLON STRING SEMICOLON .

    $default  reduce using rule 31 (chain_param)


state 164

   29 chain_param: chain_param namelist_decl COLON INTEGER SEMICOLON .

    $default  reduce using rule 29 (chain_param)


state 165

   49 func_block: BLOCK $@5 program RETURN . expr $@6 SEMICOLON KCOLB

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr   go to state 168
    mexpr  go to state 33


state 166

   35 chain_param: chain_param NAME REF COLON STRING SEMICOLON .

    $default  reduce using rule 35 (chain_param)


state 167

   32 chain_param: chain_param NAME REF COLON INTEGER SEMICOLON .

    $default  reduce using rule 32 (chain_param)


state 168

   49 func_block: BLOCK $@5 program RETURN expr . $@6 SEMICOLON KCOLB

    $default  reduce using rule 48 ($@6)

    $@6  go to state 169


state 169

   49 func_block: BLOCK $@5 program RETURN expr $@6 . SEMICOLON KCOLB

    SEMICOLON  shift, and go to state 170


state 170

   49 func_block: BLOCK $@5 program RETURN expr $@6 SEMICOLON . KCOLB

    KCOLB  shift, and go to state 171


state 171

   49 func_block: BLOCK $@5 program RETURN expr $@6 SEMICOLON KCOLB .

    $default  reduce using rule 49 (func_block)
