Terminals unused in grammar

   LABELNAME
   DELIM
   QUOTE
   EOFF


State 1 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | commands

    3 commands: commands command
    4         | command

    5 command: decl
    6        | action
    7        | control

    8 decl: decl_var
    9     | decl_func
   10     | decl_ref
   11     | decl_label

   12 type: STRING
   13     | INTEGER

   14 decl_var: namelist COLON STRING SEMICOLON
   15         | namelist COLON INTEGER SEMICOLON

   16 namelist: namelist COMA NAME
   17         | NAME

   18 decl_ref: NAME REF NAME COLON type SEMICOLON

   19 decl_label: LABEL NAME SEMICOLON

   20 $@1: /* empty */

   21 decl_func: NAME COLON INTEGER OBRACE $@1 chain_param CBRACE func_block
   22          | NAME COLON STRING OBRACE chain_param CBRACE func_block

   23 chain_param: chain_param namelist_decl COLON INTEGER
   24            | chain_param namelist_decl COLON INTEGER SEMICOLON
   25            | chain_param namelist_decl COLON STRING
   26            | chain_param namelist_decl COLON STRING SEMICOLON
   27            | namelist_decl COLON INTEGER SEMICOLON
   28            | namelist_decl COLON INTEGER
   29            | namelist_decl COLON STRING SEMICOLON
   30            | namelist_decl COLON STRING

   31 namelist_decl: namelist_decl COMA NAME
   32              | NAME

   33 block: BLOCK commands KCOLB

   34 $@2: /* empty */

   35 $@3: /* empty */

   36 func_block: BLOCK $@2 program RETURN expr $@3 SEMICOLON KCOLB

   37 action: assign
   38       | io
   39       | goto

   40 assign: NAME ASSIGN expr SEMICOLON

   41 io: READ OBRACE NAME CBRACE SEMICOLON
   42   | WRITE OBRACE NAME CBRACE SEMICOLON
   43   | WRITE OBRACE NUMBER CBRACE SEMICOLON

   44 goto: GOTO NAME SEMICOLON

   45 expr: expr MUL expr
   46     | expr DIV expr
   47     | expr ADD expr
   48     | expr SUB expr
   49     | expr AND expr
   50     | expr OR expr
   51     | expr LT expr
   52     | expr LE expr
   53     | expr GT expr
   54     | expr GE expr
   55     | expr EQ expr
   56     | expr NE expr
   57     | NOT expr
   58     | OBRACE expr CBRACE
   59     | NUMBER
   60     | STRINGCONST
   61     | STRINGCONST RECOPENBRACE expr RECCLOSEBRACE
   62     | NAME
   63     | NAME RECOPENBRACE expr RECCLOSEBRACE

   64 $@4: /* empty */

   65 expr: NAME OBRACE $@4 act_params CBRACE

   66 act_params: act_params COMA expr
   67           | expr

   68 control: cond
   69        | cycle

   70 $@5: /* empty */

   71 $@6: /* empty */

   72 cond: IF expr $@5 THEN block $@6 ELSE block

   73 $@7: /* empty */

   74 $@8: /* empty */

   75 cycle: $@7 WHILE expr $@8 LOOP commands POOL


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 43 59
NAME (259) 16 17 18 19 21 22 31 32 40 41 42 44 62 63 65
LABELNAME (260)
REF (261) 18
COLON (262) 14 15 18 21 22 23 24 25 26 27 28 29 30
SEMICOLON (263) 14 15 18 19 24 26 27 29 36 40 41 42 43 44
DELIM (264)
STRINGCONST (265) 60 61
QUOTE (266)
STRING (267) 12 14 22 25 26 29 30
INTEGER (268) 13 15 21 23 24 27 28
COMA (269) 16 31 66
RETURN (270) 36
ASSIGN (271) 40
IF (272) 72
WHILE (273) 75
LOOP (274) 75
POOL (275) 75
READ (276) 41
WRITE (277) 42 43
EOFF (278)
LABEL (279) 19
RECOPENBRACE (280) 61 63
RECCLOSEBRACE (281) 61 63
BLOCK (282) 33 36
KCOLB (283) 33 36
THEN (284) 72
ELSE (285) 72
GOTO (286) 44
OBRACE (287) 21 22 41 42 43 58 65
CBRACE (288) 21 22 41 42 43 58 65
OR (289) 50
AND (290) 49
NOT (291) 57
NE (292) 56
EQ (293) 55
GE (294) 54
LE (295) 52
GT (296) 53
LT (297) 51
SUB (298) 48
ADD (299) 47
DIV (300) 46
MUL (301) 45


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1 2, on right: 0 36
commands (49)
    on left: 3 4, on right: 2 3 33 75
command (50)
    on left: 5 6 7, on right: 3 4
decl (51)
    on left: 8 9 10 11, on right: 5
type (52)
    on left: 12 13, on right: 18
decl_var (53)
    on left: 14 15, on right: 8
namelist (54)
    on left: 16 17, on right: 14 15 16
decl_ref (55)
    on left: 18, on right: 10
decl_label (56)
    on left: 19, on right: 11
decl_func (57)
    on left: 21 22, on right: 9
$@1 (58)
    on left: 20, on right: 21
chain_param (59)
    on left: 23 24 25 26 27 28 29 30, on right: 21 22 23 24 25 26
namelist_decl (60)
    on left: 31 32, on right: 23 24 25 26 27 28 29 30 31
block (61)
    on left: 33, on right: 72
func_block (62)
    on left: 36, on right: 21 22
$@2 (63)
    on left: 34, on right: 36
$@3 (64)
    on left: 35, on right: 36
action (65)
    on left: 37 38 39, on right: 6
assign (66)
    on left: 40, on right: 37
io (67)
    on left: 41 42 43, on right: 38
goto (68)
    on left: 44, on right: 39
expr (69)
    on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62
    63 65, on right: 36 40 45 46 47 48 49 50 51 52 53 54 55 56 57 58
    61 63 66 67 72 75
$@4 (70)
    on left: 64, on right: 65
act_params (71)
    on left: 66 67, on right: 65 66
control (72)
    on left: 68 69, on right: 7
cond (73)
    on left: 72, on right: 68
$@5 (74)
    on left: 70, on right: 72
$@6 (75)
    on left: 71, on right: 72
cycle (76)
    on left: 75, on right: 69
$@7 (77)
    on left: 73, on right: 75
$@8 (78)
    on left: 74, on right: 75


state 0

    0 $accept: . program $end

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    GOTO   shift, and go to state 6

    WHILE     reduce using rule 73 ($@7)
    $default  reduce using rule 1 (program)

    program     go to state 7
    commands    go to state 8
    command     go to state 9
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@7         go to state 23


state 1

   17 namelist: NAME .
   18 decl_ref: NAME . REF NAME COLON type SEMICOLON
   21 decl_func: NAME . COLON INTEGER OBRACE $@1 chain_param CBRACE func_block
   22          | NAME . COLON STRING OBRACE chain_param CBRACE func_block
   40 assign: NAME . ASSIGN expr SEMICOLON

    REF     shift, and go to state 24
    COLON   shift, and go to state 25
    ASSIGN  shift, and go to state 26

    COLON     [reduce using rule 17 (namelist)]
    $default  reduce using rule 17 (namelist)


state 2

   72 cond: IF . expr $@5 THEN block $@6 ELSE block

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr  go to state 32


state 3

   41 io: READ . OBRACE NAME CBRACE SEMICOLON

    OBRACE  shift, and go to state 33


state 4

   42 io: WRITE . OBRACE NAME CBRACE SEMICOLON
   43   | WRITE . OBRACE NUMBER CBRACE SEMICOLON

    OBRACE  shift, and go to state 34


state 5

   19 decl_label: LABEL . NAME SEMICOLON

    NAME  shift, and go to state 35


state 6

   44 goto: GOTO . NAME SEMICOLON

    NAME  shift, and go to state 36


state 7

    0 $accept: program . $end

    $end  shift, and go to state 37


state 8

    2 program: commands .
    3 commands: commands . command

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    GOTO   shift, and go to state 6

    WHILE     reduce using rule 73 ($@7)
    $default  reduce using rule 2 (program)

    command     go to state 38
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@7         go to state 23


state 9

    4 commands: command .

    $default  reduce using rule 4 (commands)


state 10

    5 command: decl .

    $default  reduce using rule 5 (command)


state 11

    8 decl: decl_var .

    $default  reduce using rule 8 (decl)


state 12

   14 decl_var: namelist . COLON STRING SEMICOLON
   15         | namelist . COLON INTEGER SEMICOLON
   16 namelist: namelist . COMA NAME

    COLON  shift, and go to state 39
    COMA   shift, and go to state 40


state 13

   10 decl: decl_ref .

    $default  reduce using rule 10 (decl)


state 14

   11 decl: decl_label .

    $default  reduce using rule 11 (decl)


state 15

    9 decl: decl_func .

    $default  reduce using rule 9 (decl)


state 16

    6 command: action .

    $default  reduce using rule 6 (command)


state 17

   37 action: assign .

    $default  reduce using rule 37 (action)


state 18

   38 action: io .

    $default  reduce using rule 38 (action)


state 19

   39 action: goto .

    $default  reduce using rule 39 (action)


state 20

    7 command: control .

    $default  reduce using rule 7 (command)


state 21

   68 control: cond .

    $default  reduce using rule 68 (control)


state 22

   69 control: cycle .

    $default  reduce using rule 69 (control)


state 23

   75 cycle: $@7 . WHILE expr $@8 LOOP commands POOL

    WHILE  shift, and go to state 41


state 24

   18 decl_ref: NAME REF . NAME COLON type SEMICOLON

    NAME  shift, and go to state 42


state 25

   21 decl_func: NAME COLON . INTEGER OBRACE $@1 chain_param CBRACE func_block
   22          | NAME COLON . STRING OBRACE chain_param CBRACE func_block

    STRING   shift, and go to state 43
    INTEGER  shift, and go to state 44


state 26

   40 assign: NAME ASSIGN . expr SEMICOLON

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr  go to state 45


state 27

   59 expr: NUMBER .

    $default  reduce using rule 59 (expr)


state 28

   62 expr: NAME .
   63     | NAME . RECOPENBRACE expr RECCLOSEBRACE
   65     | NAME . OBRACE $@4 act_params CBRACE

    RECOPENBRACE  shift, and go to state 46
    OBRACE        shift, and go to state 47

    $default  reduce using rule 62 (expr)


state 29

   60 expr: STRINGCONST .
   61     | STRINGCONST . RECOPENBRACE expr RECCLOSEBRACE

    RECOPENBRACE  shift, and go to state 48

    $default  reduce using rule 60 (expr)


state 30

   58 expr: OBRACE . expr CBRACE

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr  go to state 49


state 31

   57 expr: NOT . expr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr  go to state 50


state 32

   45 expr: expr . MUL expr
   46     | expr . DIV expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . AND expr
   50     | expr . OR expr
   51     | expr . LT expr
   52     | expr . LE expr
   53     | expr . GT expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   72 cond: IF expr . $@5 THEN block $@6 ELSE block

    OR   shift, and go to state 51
    AND  shift, and go to state 52
    NE   shift, and go to state 53
    EQ   shift, and go to state 54
    GE   shift, and go to state 55
    LE   shift, and go to state 56
    GT   shift, and go to state 57
    LT   shift, and go to state 58
    SUB  shift, and go to state 59
    ADD  shift, and go to state 60
    DIV  shift, and go to state 61
    MUL  shift, and go to state 62

    $default  reduce using rule 70 ($@5)

    $@5  go to state 63


state 33

   41 io: READ OBRACE . NAME CBRACE SEMICOLON

    NAME  shift, and go to state 64


state 34

   42 io: WRITE OBRACE . NAME CBRACE SEMICOLON
   43   | WRITE OBRACE . NUMBER CBRACE SEMICOLON

    NUMBER  shift, and go to state 65
    NAME    shift, and go to state 66


state 35

   19 decl_label: LABEL NAME . SEMICOLON

    SEMICOLON  shift, and go to state 67


state 36

   44 goto: GOTO NAME . SEMICOLON

    SEMICOLON  shift, and go to state 68


state 37

    0 $accept: program $end .

    $default  accept


state 38

    3 commands: commands command .

    $default  reduce using rule 3 (commands)


state 39

   14 decl_var: namelist COLON . STRING SEMICOLON
   15         | namelist COLON . INTEGER SEMICOLON

    STRING   shift, and go to state 69
    INTEGER  shift, and go to state 70


state 40

   16 namelist: namelist COMA . NAME

    NAME  shift, and go to state 71


state 41

   75 cycle: $@7 WHILE . expr $@8 LOOP commands POOL

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr  go to state 72


state 42

   18 decl_ref: NAME REF NAME . COLON type SEMICOLON

    COLON  shift, and go to state 73


state 43

   22 decl_func: NAME COLON STRING . OBRACE chain_param CBRACE func_block

    OBRACE  shift, and go to state 74


state 44

   21 decl_func: NAME COLON INTEGER . OBRACE $@1 chain_param CBRACE func_block

    OBRACE  shift, and go to state 75


state 45

   40 assign: NAME ASSIGN expr . SEMICOLON
   45 expr: expr . MUL expr
   46     | expr . DIV expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . AND expr
   50     | expr . OR expr
   51     | expr . LT expr
   52     | expr . LE expr
   53     | expr . GT expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr

    SEMICOLON  shift, and go to state 76
    OR         shift, and go to state 51
    AND        shift, and go to state 52
    NE         shift, and go to state 53
    EQ         shift, and go to state 54
    GE         shift, and go to state 55
    LE         shift, and go to state 56
    GT         shift, and go to state 57
    LT         shift, and go to state 58
    SUB        shift, and go to state 59
    ADD        shift, and go to state 60
    DIV        shift, and go to state 61
    MUL        shift, and go to state 62


state 46

   63 expr: NAME RECOPENBRACE . expr RECCLOSEBRACE

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr  go to state 77


state 47

   65 expr: NAME OBRACE . $@4 act_params CBRACE

    $default  reduce using rule 64 ($@4)

    $@4  go to state 78


state 48

   61 expr: STRINGCONST RECOPENBRACE . expr RECCLOSEBRACE

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr  go to state 79


state 49

   45 expr: expr . MUL expr
   46     | expr . DIV expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . AND expr
   50     | expr . OR expr
   51     | expr . LT expr
   52     | expr . LE expr
   53     | expr . GT expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   58     | OBRACE expr . CBRACE

    CBRACE  shift, and go to state 80
    OR      shift, and go to state 51
    AND     shift, and go to state 52
    NE      shift, and go to state 53
    EQ      shift, and go to state 54
    GE      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    LT      shift, and go to state 58
    SUB     shift, and go to state 59
    ADD     shift, and go to state 60
    DIV     shift, and go to state 61
    MUL     shift, and go to state 62


state 50

   45 expr: expr . MUL expr
   46     | expr . DIV expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . AND expr
   50     | expr . OR expr
   51     | expr . LT expr
   52     | expr . LE expr
   53     | expr . GT expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | NOT expr .

    NE   shift, and go to state 53
    EQ   shift, and go to state 54
    GE   shift, and go to state 55
    LE   shift, and go to state 56
    GT   shift, and go to state 57
    LT   shift, and go to state 58
    SUB  shift, and go to state 59
    ADD  shift, and go to state 60
    DIV  shift, and go to state 61
    MUL  shift, and go to state 62

    $default  reduce using rule 57 (expr)


state 51

   50 expr: expr OR . expr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr  go to state 81


state 52

   49 expr: expr AND . expr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr  go to state 82


state 53

   56 expr: expr NE . expr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr  go to state 83


state 54

   55 expr: expr EQ . expr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr  go to state 84


state 55

   54 expr: expr GE . expr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr  go to state 85


state 56

   52 expr: expr LE . expr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr  go to state 86


state 57

   53 expr: expr GT . expr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr  go to state 87


state 58

   51 expr: expr LT . expr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr  go to state 88


state 59

   48 expr: expr SUB . expr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr  go to state 89


state 60

   47 expr: expr ADD . expr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr  go to state 90


state 61

   46 expr: expr DIV . expr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr  go to state 91


state 62

   45 expr: expr MUL . expr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr  go to state 92


state 63

   72 cond: IF expr $@5 . THEN block $@6 ELSE block

    THEN  shift, and go to state 93


state 64

   41 io: READ OBRACE NAME . CBRACE SEMICOLON

    CBRACE  shift, and go to state 94


state 65

   43 io: WRITE OBRACE NUMBER . CBRACE SEMICOLON

    CBRACE  shift, and go to state 95


state 66

   42 io: WRITE OBRACE NAME . CBRACE SEMICOLON

    CBRACE  shift, and go to state 96


state 67

   19 decl_label: LABEL NAME SEMICOLON .

    $default  reduce using rule 19 (decl_label)


state 68

   44 goto: GOTO NAME SEMICOLON .

    $default  reduce using rule 44 (goto)


state 69

   14 decl_var: namelist COLON STRING . SEMICOLON

    SEMICOLON  shift, and go to state 97


state 70

   15 decl_var: namelist COLON INTEGER . SEMICOLON

    SEMICOLON  shift, and go to state 98


state 71

   16 namelist: namelist COMA NAME .

    $default  reduce using rule 16 (namelist)


state 72

   45 expr: expr . MUL expr
   46     | expr . DIV expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . AND expr
   50     | expr . OR expr
   51     | expr . LT expr
   52     | expr . LE expr
   53     | expr . GT expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   75 cycle: $@7 WHILE expr . $@8 LOOP commands POOL

    OR   shift, and go to state 51
    AND  shift, and go to state 52
    NE   shift, and go to state 53
    EQ   shift, and go to state 54
    GE   shift, and go to state 55
    LE   shift, and go to state 56
    GT   shift, and go to state 57
    LT   shift, and go to state 58
    SUB  shift, and go to state 59
    ADD  shift, and go to state 60
    DIV  shift, and go to state 61
    MUL  shift, and go to state 62

    $default  reduce using rule 74 ($@8)

    $@8  go to state 99


state 73

   18 decl_ref: NAME REF NAME COLON . type SEMICOLON

    STRING   shift, and go to state 100
    INTEGER  shift, and go to state 101

    type  go to state 102


state 74

   22 decl_func: NAME COLON STRING OBRACE . chain_param CBRACE func_block

    NAME  shift, and go to state 103

    chain_param    go to state 104
    namelist_decl  go to state 105


state 75

   21 decl_func: NAME COLON INTEGER OBRACE . $@1 chain_param CBRACE func_block

    $default  reduce using rule 20 ($@1)

    $@1  go to state 106


state 76

   40 assign: NAME ASSIGN expr SEMICOLON .

    $default  reduce using rule 40 (assign)


state 77

   45 expr: expr . MUL expr
   46     | expr . DIV expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . AND expr
   50     | expr . OR expr
   51     | expr . LT expr
   52     | expr . LE expr
   53     | expr . GT expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   63     | NAME RECOPENBRACE expr . RECCLOSEBRACE

    RECCLOSEBRACE  shift, and go to state 107
    OR             shift, and go to state 51
    AND            shift, and go to state 52
    NE             shift, and go to state 53
    EQ             shift, and go to state 54
    GE             shift, and go to state 55
    LE             shift, and go to state 56
    GT             shift, and go to state 57
    LT             shift, and go to state 58
    SUB            shift, and go to state 59
    ADD            shift, and go to state 60
    DIV            shift, and go to state 61
    MUL            shift, and go to state 62


state 78

   65 expr: NAME OBRACE $@4 . act_params CBRACE

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr        go to state 108
    act_params  go to state 109


state 79

   45 expr: expr . MUL expr
   46     | expr . DIV expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . AND expr
   50     | expr . OR expr
   51     | expr . LT expr
   52     | expr . LE expr
   53     | expr . GT expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   61     | STRINGCONST RECOPENBRACE expr . RECCLOSEBRACE

    RECCLOSEBRACE  shift, and go to state 110
    OR             shift, and go to state 51
    AND            shift, and go to state 52
    NE             shift, and go to state 53
    EQ             shift, and go to state 54
    GE             shift, and go to state 55
    LE             shift, and go to state 56
    GT             shift, and go to state 57
    LT             shift, and go to state 58
    SUB            shift, and go to state 59
    ADD            shift, and go to state 60
    DIV            shift, and go to state 61
    MUL            shift, and go to state 62


state 80

   58 expr: OBRACE expr CBRACE .

    $default  reduce using rule 58 (expr)


state 81

   45 expr: expr . MUL expr
   46     | expr . DIV expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . AND expr
   50     | expr . OR expr
   50     | expr OR expr .
   51     | expr . LT expr
   52     | expr . LE expr
   53     | expr . GT expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr

    NE   shift, and go to state 53
    EQ   shift, and go to state 54
    GE   shift, and go to state 55
    LE   shift, and go to state 56
    GT   shift, and go to state 57
    LT   shift, and go to state 58
    SUB  shift, and go to state 59
    ADD  shift, and go to state 60
    DIV  shift, and go to state 61
    MUL  shift, and go to state 62

    $default  reduce using rule 50 (expr)


state 82

   45 expr: expr . MUL expr
   46     | expr . DIV expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . AND expr
   49     | expr AND expr .
   50     | expr . OR expr
   51     | expr . LT expr
   52     | expr . LE expr
   53     | expr . GT expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr

    NE   shift, and go to state 53
    EQ   shift, and go to state 54
    GE   shift, and go to state 55
    LE   shift, and go to state 56
    GT   shift, and go to state 57
    LT   shift, and go to state 58
    SUB  shift, and go to state 59
    ADD  shift, and go to state 60
    DIV  shift, and go to state 61
    MUL  shift, and go to state 62

    $default  reduce using rule 49 (expr)


state 83

   45 expr: expr . MUL expr
   46     | expr . DIV expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . AND expr
   50     | expr . OR expr
   51     | expr . LT expr
   52     | expr . LE expr
   53     | expr . GT expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   56     | expr NE expr .

    SUB  shift, and go to state 59
    ADD  shift, and go to state 60
    DIV  shift, and go to state 61
    MUL  shift, and go to state 62

    $default  reduce using rule 56 (expr)


state 84

   45 expr: expr . MUL expr
   46     | expr . DIV expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . AND expr
   50     | expr . OR expr
   51     | expr . LT expr
   52     | expr . LE expr
   53     | expr . GT expr
   54     | expr . GE expr
   55     | expr . EQ expr
   55     | expr EQ expr .
   56     | expr . NE expr

    SUB  shift, and go to state 59
    ADD  shift, and go to state 60
    DIV  shift, and go to state 61
    MUL  shift, and go to state 62

    $default  reduce using rule 55 (expr)


state 85

   45 expr: expr . MUL expr
   46     | expr . DIV expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . AND expr
   50     | expr . OR expr
   51     | expr . LT expr
   52     | expr . LE expr
   53     | expr . GT expr
   54     | expr . GE expr
   54     | expr GE expr .
   55     | expr . EQ expr
   56     | expr . NE expr

    SUB  shift, and go to state 59
    ADD  shift, and go to state 60
    DIV  shift, and go to state 61
    MUL  shift, and go to state 62

    $default  reduce using rule 54 (expr)


state 86

   45 expr: expr . MUL expr
   46     | expr . DIV expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . AND expr
   50     | expr . OR expr
   51     | expr . LT expr
   52     | expr . LE expr
   52     | expr LE expr .
   53     | expr . GT expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr

    SUB  shift, and go to state 59
    ADD  shift, and go to state 60
    DIV  shift, and go to state 61
    MUL  shift, and go to state 62

    $default  reduce using rule 52 (expr)


state 87

   45 expr: expr . MUL expr
   46     | expr . DIV expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . AND expr
   50     | expr . OR expr
   51     | expr . LT expr
   52     | expr . LE expr
   53     | expr . GT expr
   53     | expr GT expr .
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr

    SUB  shift, and go to state 59
    ADD  shift, and go to state 60
    DIV  shift, and go to state 61
    MUL  shift, and go to state 62

    $default  reduce using rule 53 (expr)


state 88

   45 expr: expr . MUL expr
   46     | expr . DIV expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . AND expr
   50     | expr . OR expr
   51     | expr . LT expr
   51     | expr LT expr .
   52     | expr . LE expr
   53     | expr . GT expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr

    SUB  shift, and go to state 59
    ADD  shift, and go to state 60
    DIV  shift, and go to state 61
    MUL  shift, and go to state 62

    $default  reduce using rule 51 (expr)


state 89

   45 expr: expr . MUL expr
   46     | expr . DIV expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   48     | expr SUB expr .
   49     | expr . AND expr
   50     | expr . OR expr
   51     | expr . LT expr
   52     | expr . LE expr
   53     | expr . GT expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr

    DIV  shift, and go to state 61
    MUL  shift, and go to state 62

    $default  reduce using rule 48 (expr)


state 90

   45 expr: expr . MUL expr
   46     | expr . DIV expr
   47     | expr . ADD expr
   47     | expr ADD expr .
   48     | expr . SUB expr
   49     | expr . AND expr
   50     | expr . OR expr
   51     | expr . LT expr
   52     | expr . LE expr
   53     | expr . GT expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr

    DIV  shift, and go to state 61
    MUL  shift, and go to state 62

    $default  reduce using rule 47 (expr)


state 91

   45 expr: expr . MUL expr
   46     | expr . DIV expr
   46     | expr DIV expr .
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . AND expr
   50     | expr . OR expr
   51     | expr . LT expr
   52     | expr . LE expr
   53     | expr . GT expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr

    $default  reduce using rule 46 (expr)


state 92

   45 expr: expr . MUL expr
   45     | expr MUL expr .
   46     | expr . DIV expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . AND expr
   50     | expr . OR expr
   51     | expr . LT expr
   52     | expr . LE expr
   53     | expr . GT expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr

    $default  reduce using rule 45 (expr)


state 93

   72 cond: IF expr $@5 THEN . block $@6 ELSE block

    BLOCK  shift, and go to state 111

    block  go to state 112


state 94

   41 io: READ OBRACE NAME CBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 113


state 95

   43 io: WRITE OBRACE NUMBER CBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 114


state 96

   42 io: WRITE OBRACE NAME CBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 115


state 97

   14 decl_var: namelist COLON STRING SEMICOLON .

    $default  reduce using rule 14 (decl_var)


state 98

   15 decl_var: namelist COLON INTEGER SEMICOLON .

    $default  reduce using rule 15 (decl_var)


state 99

   75 cycle: $@7 WHILE expr $@8 . LOOP commands POOL

    LOOP  shift, and go to state 116


state 100

   12 type: STRING .

    $default  reduce using rule 12 (type)


state 101

   13 type: INTEGER .

    $default  reduce using rule 13 (type)


state 102

   18 decl_ref: NAME REF NAME COLON type . SEMICOLON

    SEMICOLON  shift, and go to state 117


state 103

   32 namelist_decl: NAME .

    $default  reduce using rule 32 (namelist_decl)


state 104

   22 decl_func: NAME COLON STRING OBRACE chain_param . CBRACE func_block
   23 chain_param: chain_param . namelist_decl COLON INTEGER
   24            | chain_param . namelist_decl COLON INTEGER SEMICOLON
   25            | chain_param . namelist_decl COLON STRING
   26            | chain_param . namelist_decl COLON STRING SEMICOLON

    NAME    shift, and go to state 103
    CBRACE  shift, and go to state 118

    namelist_decl  go to state 119


state 105

   27 chain_param: namelist_decl . COLON INTEGER SEMICOLON
   28            | namelist_decl . COLON INTEGER
   29            | namelist_decl . COLON STRING SEMICOLON
   30            | namelist_decl . COLON STRING
   31 namelist_decl: namelist_decl . COMA NAME

    COLON  shift, and go to state 120
    COMA   shift, and go to state 121


state 106

   21 decl_func: NAME COLON INTEGER OBRACE $@1 . chain_param CBRACE func_block

    NAME  shift, and go to state 103

    chain_param    go to state 122
    namelist_decl  go to state 105


state 107

   63 expr: NAME RECOPENBRACE expr RECCLOSEBRACE .

    $default  reduce using rule 63 (expr)


state 108

   45 expr: expr . MUL expr
   46     | expr . DIV expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . AND expr
   50     | expr . OR expr
   51     | expr . LT expr
   52     | expr . LE expr
   53     | expr . GT expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   67 act_params: expr .

    OR   shift, and go to state 51
    AND  shift, and go to state 52
    NE   shift, and go to state 53
    EQ   shift, and go to state 54
    GE   shift, and go to state 55
    LE   shift, and go to state 56
    GT   shift, and go to state 57
    LT   shift, and go to state 58
    SUB  shift, and go to state 59
    ADD  shift, and go to state 60
    DIV  shift, and go to state 61
    MUL  shift, and go to state 62

    $default  reduce using rule 67 (act_params)


state 109

   65 expr: NAME OBRACE $@4 act_params . CBRACE
   66 act_params: act_params . COMA expr

    COMA    shift, and go to state 123
    CBRACE  shift, and go to state 124


state 110

   61 expr: STRINGCONST RECOPENBRACE expr RECCLOSEBRACE .

    $default  reduce using rule 61 (expr)


state 111

   33 block: BLOCK . commands KCOLB

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    GOTO   shift, and go to state 6

    $default  reduce using rule 73 ($@7)

    commands    go to state 125
    command     go to state 9
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@7         go to state 23


state 112

   72 cond: IF expr $@5 THEN block . $@6 ELSE block

    $default  reduce using rule 71 ($@6)

    $@6  go to state 126


state 113

   41 io: READ OBRACE NAME CBRACE SEMICOLON .

    $default  reduce using rule 41 (io)


state 114

   43 io: WRITE OBRACE NUMBER CBRACE SEMICOLON .

    $default  reduce using rule 43 (io)


state 115

   42 io: WRITE OBRACE NAME CBRACE SEMICOLON .

    $default  reduce using rule 42 (io)


state 116

   75 cycle: $@7 WHILE expr $@8 LOOP . commands POOL

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    GOTO   shift, and go to state 6

    $default  reduce using rule 73 ($@7)

    commands    go to state 127
    command     go to state 9
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@7         go to state 23


state 117

   18 decl_ref: NAME REF NAME COLON type SEMICOLON .

    $default  reduce using rule 18 (decl_ref)


state 118

   22 decl_func: NAME COLON STRING OBRACE chain_param CBRACE . func_block

    BLOCK  shift, and go to state 128

    func_block  go to state 129


state 119

   23 chain_param: chain_param namelist_decl . COLON INTEGER
   24            | chain_param namelist_decl . COLON INTEGER SEMICOLON
   25            | chain_param namelist_decl . COLON STRING
   26            | chain_param namelist_decl . COLON STRING SEMICOLON
   31 namelist_decl: namelist_decl . COMA NAME

    COLON  shift, and go to state 130
    COMA   shift, and go to state 121


state 120

   27 chain_param: namelist_decl COLON . INTEGER SEMICOLON
   28            | namelist_decl COLON . INTEGER
   29            | namelist_decl COLON . STRING SEMICOLON
   30            | namelist_decl COLON . STRING

    STRING   shift, and go to state 131
    INTEGER  shift, and go to state 132


state 121

   31 namelist_decl: namelist_decl COMA . NAME

    NAME  shift, and go to state 133


state 122

   21 decl_func: NAME COLON INTEGER OBRACE $@1 chain_param . CBRACE func_block
   23 chain_param: chain_param . namelist_decl COLON INTEGER
   24            | chain_param . namelist_decl COLON INTEGER SEMICOLON
   25            | chain_param . namelist_decl COLON STRING
   26            | chain_param . namelist_decl COLON STRING SEMICOLON

    NAME    shift, and go to state 103
    CBRACE  shift, and go to state 134

    namelist_decl  go to state 119


state 123

   66 act_params: act_params COMA . expr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr  go to state 135


state 124

   65 expr: NAME OBRACE $@4 act_params CBRACE .

    $default  reduce using rule 65 (expr)


state 125

    3 commands: commands . command
   33 block: BLOCK commands . KCOLB

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    KCOLB  shift, and go to state 136
    GOTO   shift, and go to state 6

    $default  reduce using rule 73 ($@7)

    command     go to state 38
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@7         go to state 23


state 126

   72 cond: IF expr $@5 THEN block $@6 . ELSE block

    ELSE  shift, and go to state 137


state 127

    3 commands: commands . command
   75 cycle: $@7 WHILE expr $@8 LOOP commands . POOL

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    POOL   shift, and go to state 138
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    GOTO   shift, and go to state 6

    $default  reduce using rule 73 ($@7)

    command     go to state 38
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@7         go to state 23


state 128

   36 func_block: BLOCK . $@2 program RETURN expr $@3 SEMICOLON KCOLB

    $default  reduce using rule 34 ($@2)

    $@2  go to state 139


state 129

   22 decl_func: NAME COLON STRING OBRACE chain_param CBRACE func_block .

    $default  reduce using rule 22 (decl_func)


state 130

   23 chain_param: chain_param namelist_decl COLON . INTEGER
   24            | chain_param namelist_decl COLON . INTEGER SEMICOLON
   25            | chain_param namelist_decl COLON . STRING
   26            | chain_param namelist_decl COLON . STRING SEMICOLON

    STRING   shift, and go to state 140
    INTEGER  shift, and go to state 141


state 131

   29 chain_param: namelist_decl COLON STRING . SEMICOLON
   30            | namelist_decl COLON STRING .

    SEMICOLON  shift, and go to state 142

    $default  reduce using rule 30 (chain_param)


state 132

   27 chain_param: namelist_decl COLON INTEGER . SEMICOLON
   28            | namelist_decl COLON INTEGER .

    SEMICOLON  shift, and go to state 143

    $default  reduce using rule 28 (chain_param)


state 133

   31 namelist_decl: namelist_decl COMA NAME .

    $default  reduce using rule 31 (namelist_decl)


state 134

   21 decl_func: NAME COLON INTEGER OBRACE $@1 chain_param CBRACE . func_block

    BLOCK  shift, and go to state 128

    func_block  go to state 144


state 135

   45 expr: expr . MUL expr
   46     | expr . DIV expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . AND expr
   50     | expr . OR expr
   51     | expr . LT expr
   52     | expr . LE expr
   53     | expr . GT expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   66 act_params: act_params COMA expr .

    OR   shift, and go to state 51
    AND  shift, and go to state 52
    NE   shift, and go to state 53
    EQ   shift, and go to state 54
    GE   shift, and go to state 55
    LE   shift, and go to state 56
    GT   shift, and go to state 57
    LT   shift, and go to state 58
    SUB  shift, and go to state 59
    ADD  shift, and go to state 60
    DIV  shift, and go to state 61
    MUL  shift, and go to state 62

    $default  reduce using rule 66 (act_params)


state 136

   33 block: BLOCK commands KCOLB .

    $default  reduce using rule 33 (block)


state 137

   72 cond: IF expr $@5 THEN block $@6 ELSE . block

    BLOCK  shift, and go to state 111

    block  go to state 145


state 138

   75 cycle: $@7 WHILE expr $@8 LOOP commands POOL .

    $default  reduce using rule 75 (cycle)


state 139

   36 func_block: BLOCK $@2 . program RETURN expr $@3 SEMICOLON KCOLB

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    GOTO   shift, and go to state 6

    WHILE     reduce using rule 73 ($@7)
    $default  reduce using rule 1 (program)

    program     go to state 146
    commands    go to state 8
    command     go to state 9
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@7         go to state 23


state 140

   25 chain_param: chain_param namelist_decl COLON STRING .
   26            | chain_param namelist_decl COLON STRING . SEMICOLON

    SEMICOLON  shift, and go to state 147

    $default  reduce using rule 25 (chain_param)


state 141

   23 chain_param: chain_param namelist_decl COLON INTEGER .
   24            | chain_param namelist_decl COLON INTEGER . SEMICOLON

    SEMICOLON  shift, and go to state 148

    $default  reduce using rule 23 (chain_param)


state 142

   29 chain_param: namelist_decl COLON STRING SEMICOLON .

    $default  reduce using rule 29 (chain_param)


state 143

   27 chain_param: namelist_decl COLON INTEGER SEMICOLON .

    $default  reduce using rule 27 (chain_param)


state 144

   21 decl_func: NAME COLON INTEGER OBRACE $@1 chain_param CBRACE func_block .

    $default  reduce using rule 21 (decl_func)


state 145

   72 cond: IF expr $@5 THEN block $@6 ELSE block .

    $default  reduce using rule 72 (cond)


state 146

   36 func_block: BLOCK $@2 program . RETURN expr $@3 SEMICOLON KCOLB

    RETURN  shift, and go to state 149


state 147

   26 chain_param: chain_param namelist_decl COLON STRING SEMICOLON .

    $default  reduce using rule 26 (chain_param)


state 148

   24 chain_param: chain_param namelist_decl COLON INTEGER SEMICOLON .

    $default  reduce using rule 24 (chain_param)


state 149

   36 func_block: BLOCK $@2 program RETURN . expr $@3 SEMICOLON KCOLB

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr  go to state 150


state 150

   36 func_block: BLOCK $@2 program RETURN expr . $@3 SEMICOLON KCOLB
   45 expr: expr . MUL expr
   46     | expr . DIV expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . AND expr
   50     | expr . OR expr
   51     | expr . LT expr
   52     | expr . LE expr
   53     | expr . GT expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr

    OR   shift, and go to state 51
    AND  shift, and go to state 52
    NE   shift, and go to state 53
    EQ   shift, and go to state 54
    GE   shift, and go to state 55
    LE   shift, and go to state 56
    GT   shift, and go to state 57
    LT   shift, and go to state 58
    SUB  shift, and go to state 59
    ADD  shift, and go to state 60
    DIV  shift, and go to state 61
    MUL  shift, and go to state 62

    $default  reduce using rule 35 ($@3)

    $@3  go to state 151


state 151

   36 func_block: BLOCK $@2 program RETURN expr $@3 . SEMICOLON KCOLB

    SEMICOLON  shift, and go to state 152


state 152

   36 func_block: BLOCK $@2 program RETURN expr $@3 SEMICOLON . KCOLB

    KCOLB  shift, and go to state 153


state 153

   36 func_block: BLOCK $@2 program RETURN expr $@3 SEMICOLON KCOLB .

    $default  reduce using rule 36 (func_block)
