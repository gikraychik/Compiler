Terminals unused in grammar

   LABELNAME
   DELIM
   QUOTE
   EOFF


State 1 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | commands

    3 commands: commands command
    4         | command

    5 command: decl
    6        | action
    7        | control

    8 decl: decl_var
    9     | decl_func
   10     | decl_ref
   11     | decl_label

   12 type: STRING
   13     | INTEGER

   14 decl_var: namelist COLON STRING SEMICOLON
   15         | namelist COLON INTEGER SEMICOLON

   16 namelist: namelist COMA NAME
   17         | NAME

   18 decl_ref: NAME REF NAME COLON type SEMICOLON

   19 decl_label: LABEL NAME SEMICOLON

   20 $@1: /* empty */

   21 decl_func: NAME COLON INTEGER OBRACE $@1 chain_param CBRACE func_block

   22 $@2: /* empty */

   23 decl_func: NAME COLON STRING OBRACE $@2 chain_param CBRACE func_block

   24 chain_param: chain_param namelist_decl COLON INTEGER
   25            | chain_param namelist_decl COLON INTEGER SEMICOLON
   26            | chain_param namelist_decl COLON STRING
   27            | chain_param namelist_decl COLON STRING SEMICOLON
   28            | chain_param NAME REF COLON INTEGER SEMICOLON
   29            | chain_param NAME REF COLON INTEGER
   30            | chain_param NAME REF COLON STRING
   31            | chain_param NAME REF COLON STRING SEMICOLON
   32            | NAME REF COLON INTEGER
   33            | NAME REF COLON INTEGER SEMICOLON
   34            | NAME REF COLON STRING
   35            | namelist_decl COLON INTEGER SEMICOLON
   36            | namelist_decl COLON INTEGER
   37            | namelist_decl COLON STRING SEMICOLON
   38            | namelist_decl COLON STRING

   39 namelist_decl: namelist_decl COMA NAME
   40              | NAME

   41 block: BLOCK commands KCOLB

   42 $@3: /* empty */

   43 $@4: /* empty */

   44 func_block: BLOCK $@3 program RETURN expr $@4 SEMICOLON KCOLB

   45 action: assign
   46       | io
   47       | goto

   48 assign: NAME ASSIGN expr SEMICOLON

   49 io: READ OBRACE NAME CBRACE SEMICOLON
   50   | WRITE OBRACE expr CBRACE SEMICOLON

   51 goto: GOTO NAME SEMICOLON

   52 expr: mexpr

   53 mexpr: mexpr MUL mexpr
   54      | mexpr DIV mexpr
   55      | mexpr ADD mexpr
   56      | mexpr SUB mexpr
   57      | mexpr AND mexpr
   58      | mexpr OR mexpr
   59      | mexpr LT mexpr
   60      | mexpr LE mexpr
   61      | mexpr GT mexpr
   62      | mexpr GE mexpr
   63      | mexpr EQ mexpr
   64      | mexpr NE mexpr
   65      | NOT mexpr
   66      | OBRACE mexpr CBRACE
   67      | NUMBER
   68      | STRINGCONST
   69      | STRINGCONST RECOPENBRACE mexpr RECCLOSEBRACE
   70      | NAME
   71      | NAME RECOPENBRACE mexpr RECCLOSEBRACE

   72 $@5: /* empty */

   73 mexpr: NAME OBRACE $@5 act_params CBRACE

   74 act_params: /* empty */
   75           | act_params COMA expr
   76           | expr

   77 control: cond
   78        | cycle

   79 $@6: /* empty */

   80 $@7: /* empty */

   81 cond: IF expr $@6 THEN block $@7 ELSE block

   82 $@8: /* empty */

   83 $@9: /* empty */

   84 cycle: $@8 WHILE expr $@9 LOOP commands POOL


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 67
NAME (259) 16 17 18 19 21 23 28 29 30 31 32 33 34 39 40 48 49 51 70
    71 73
LABELNAME (260)
REF (261) 18 28 29 30 31 32 33 34
COLON (262) 14 15 18 21 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
    38
SEMICOLON (263) 14 15 18 19 25 27 28 31 33 35 37 44 48 49 50 51
DELIM (264)
STRINGCONST (265) 68 69
QUOTE (266)
STRING (267) 12 14 23 26 27 30 31 34 37 38
INTEGER (268) 13 15 21 24 25 28 29 32 33 35 36
COMA (269) 16 39 75
RETURN (270) 44
ASSIGN (271) 48
IF (272) 81
WHILE (273) 84
LOOP (274) 84
POOL (275) 84
READ (276) 49
WRITE (277) 50
EOFF (278)
LABEL (279) 19
RECOPENBRACE (280) 69 71
RECCLOSEBRACE (281) 69 71
BLOCK (282) 41 44
KCOLB (283) 41 44
THEN (284) 81
ELSE (285) 81
GOTO (286) 51
OBRACE (287) 21 23 49 50 66 73
CBRACE (288) 21 23 49 50 66 73
OR (289) 58
AND (290) 57
NOT (291) 65
NE (292) 64
EQ (293) 63
GE (294) 62
LE (295) 60
GT (296) 61
LT (297) 59
SUB (298) 56
ADD (299) 55
DIV (300) 54
MUL (301) 53


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1 2, on right: 0 44
commands (49)
    on left: 3 4, on right: 2 3 41 84
command (50)
    on left: 5 6 7, on right: 3 4
decl (51)
    on left: 8 9 10 11, on right: 5
type (52)
    on left: 12 13, on right: 18
decl_var (53)
    on left: 14 15, on right: 8
namelist (54)
    on left: 16 17, on right: 14 15 16
decl_ref (55)
    on left: 18, on right: 10
decl_label (56)
    on left: 19, on right: 11
decl_func (57)
    on left: 21 23, on right: 9
$@1 (58)
    on left: 20, on right: 21
$@2 (59)
    on left: 22, on right: 23
chain_param (60)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38, on right:
    21 23 24 25 26 27 28 29 30 31
namelist_decl (61)
    on left: 39 40, on right: 24 25 26 27 35 36 37 38 39
block (62)
    on left: 41, on right: 81
func_block (63)
    on left: 44, on right: 21 23
$@3 (64)
    on left: 42, on right: 44
$@4 (65)
    on left: 43, on right: 44
action (66)
    on left: 45 46 47, on right: 6
assign (67)
    on left: 48, on right: 45
io (68)
    on left: 49 50, on right: 46
goto (69)
    on left: 51, on right: 47
expr (70)
    on left: 52, on right: 44 48 50 75 76 81 84
mexpr (71)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    71 73, on right: 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 69
    71
$@5 (72)
    on left: 72, on right: 73
act_params (73)
    on left: 74 75 76, on right: 73 75
control (74)
    on left: 77 78, on right: 7
cond (75)
    on left: 81, on right: 77
$@6 (76)
    on left: 79, on right: 81
$@7 (77)
    on left: 80, on right: 81
cycle (78)
    on left: 84, on right: 78
$@8 (79)
    on left: 82, on right: 84
$@9 (80)
    on left: 83, on right: 84


state 0

    0 $accept: . program $end

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    GOTO   shift, and go to state 6

    WHILE     reduce using rule 82 ($@8)
    $default  reduce using rule 1 (program)

    program     go to state 7
    commands    go to state 8
    command     go to state 9
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@8         go to state 23


state 1

   17 namelist: NAME .
   18 decl_ref: NAME . REF NAME COLON type SEMICOLON
   21 decl_func: NAME . COLON INTEGER OBRACE $@1 chain_param CBRACE func_block
   23          | NAME . COLON STRING OBRACE $@2 chain_param CBRACE func_block
   48 assign: NAME . ASSIGN expr SEMICOLON

    REF     shift, and go to state 24
    COLON   shift, and go to state 25
    ASSIGN  shift, and go to state 26

    COLON     [reduce using rule 17 (namelist)]
    $default  reduce using rule 17 (namelist)


state 2

   81 cond: IF . expr $@6 THEN block $@7 ELSE block

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr   go to state 32
    mexpr  go to state 33


state 3

   49 io: READ . OBRACE NAME CBRACE SEMICOLON

    OBRACE  shift, and go to state 34


state 4

   50 io: WRITE . OBRACE expr CBRACE SEMICOLON

    OBRACE  shift, and go to state 35


state 5

   19 decl_label: LABEL . NAME SEMICOLON

    NAME  shift, and go to state 36


state 6

   51 goto: GOTO . NAME SEMICOLON

    NAME  shift, and go to state 37


state 7

    0 $accept: program . $end

    $end  shift, and go to state 38


state 8

    2 program: commands .
    3 commands: commands . command

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    GOTO   shift, and go to state 6

    WHILE     reduce using rule 82 ($@8)
    $default  reduce using rule 2 (program)

    command     go to state 39
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@8         go to state 23


state 9

    4 commands: command .

    $default  reduce using rule 4 (commands)


state 10

    5 command: decl .

    $default  reduce using rule 5 (command)


state 11

    8 decl: decl_var .

    $default  reduce using rule 8 (decl)


state 12

   14 decl_var: namelist . COLON STRING SEMICOLON
   15         | namelist . COLON INTEGER SEMICOLON
   16 namelist: namelist . COMA NAME

    COLON  shift, and go to state 40
    COMA   shift, and go to state 41


state 13

   10 decl: decl_ref .

    $default  reduce using rule 10 (decl)


state 14

   11 decl: decl_label .

    $default  reduce using rule 11 (decl)


state 15

    9 decl: decl_func .

    $default  reduce using rule 9 (decl)


state 16

    6 command: action .

    $default  reduce using rule 6 (command)


state 17

   45 action: assign .

    $default  reduce using rule 45 (action)


state 18

   46 action: io .

    $default  reduce using rule 46 (action)


state 19

   47 action: goto .

    $default  reduce using rule 47 (action)


state 20

    7 command: control .

    $default  reduce using rule 7 (command)


state 21

   77 control: cond .

    $default  reduce using rule 77 (control)


state 22

   78 control: cycle .

    $default  reduce using rule 78 (control)


state 23

   84 cycle: $@8 . WHILE expr $@9 LOOP commands POOL

    WHILE  shift, and go to state 42


state 24

   18 decl_ref: NAME REF . NAME COLON type SEMICOLON

    NAME  shift, and go to state 43


state 25

   21 decl_func: NAME COLON . INTEGER OBRACE $@1 chain_param CBRACE func_block
   23          | NAME COLON . STRING OBRACE $@2 chain_param CBRACE func_block

    STRING   shift, and go to state 44
    INTEGER  shift, and go to state 45


state 26

   48 assign: NAME ASSIGN . expr SEMICOLON

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr   go to state 46
    mexpr  go to state 33


state 27

   67 mexpr: NUMBER .

    $default  reduce using rule 67 (mexpr)


state 28

   70 mexpr: NAME .
   71      | NAME . RECOPENBRACE mexpr RECCLOSEBRACE
   73      | NAME . OBRACE $@5 act_params CBRACE

    RECOPENBRACE  shift, and go to state 47
    OBRACE        shift, and go to state 48

    $default  reduce using rule 70 (mexpr)


state 29

   68 mexpr: STRINGCONST .
   69      | STRINGCONST . RECOPENBRACE mexpr RECCLOSEBRACE

    RECOPENBRACE  shift, and go to state 49

    $default  reduce using rule 68 (mexpr)


state 30

   66 mexpr: OBRACE . mexpr CBRACE

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 50


state 31

   65 mexpr: NOT . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 51


state 32

   81 cond: IF expr . $@6 THEN block $@7 ELSE block

    $default  reduce using rule 79 ($@6)

    $@6  go to state 52


state 33

   52 expr: mexpr .
   53 mexpr: mexpr . MUL mexpr
   54      | mexpr . DIV mexpr
   55      | mexpr . ADD mexpr
   56      | mexpr . SUB mexpr
   57      | mexpr . AND mexpr
   58      | mexpr . OR mexpr
   59      | mexpr . LT mexpr
   60      | mexpr . LE mexpr
   61      | mexpr . GT mexpr
   62      | mexpr . GE mexpr
   63      | mexpr . EQ mexpr
   64      | mexpr . NE mexpr

    OR   shift, and go to state 53
    AND  shift, and go to state 54
    NE   shift, and go to state 55
    EQ   shift, and go to state 56
    GE   shift, and go to state 57
    LE   shift, and go to state 58
    GT   shift, and go to state 59
    LT   shift, and go to state 60
    SUB  shift, and go to state 61
    ADD  shift, and go to state 62
    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 52 (expr)


state 34

   49 io: READ OBRACE . NAME CBRACE SEMICOLON

    NAME  shift, and go to state 65


state 35

   50 io: WRITE OBRACE . expr CBRACE SEMICOLON

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr   go to state 66
    mexpr  go to state 33


state 36

   19 decl_label: LABEL NAME . SEMICOLON

    SEMICOLON  shift, and go to state 67


state 37

   51 goto: GOTO NAME . SEMICOLON

    SEMICOLON  shift, and go to state 68


state 38

    0 $accept: program $end .

    $default  accept


state 39

    3 commands: commands command .

    $default  reduce using rule 3 (commands)


state 40

   14 decl_var: namelist COLON . STRING SEMICOLON
   15         | namelist COLON . INTEGER SEMICOLON

    STRING   shift, and go to state 69
    INTEGER  shift, and go to state 70


state 41

   16 namelist: namelist COMA . NAME

    NAME  shift, and go to state 71


state 42

   84 cycle: $@8 WHILE . expr $@9 LOOP commands POOL

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr   go to state 72
    mexpr  go to state 33


state 43

   18 decl_ref: NAME REF NAME . COLON type SEMICOLON

    COLON  shift, and go to state 73


state 44

   23 decl_func: NAME COLON STRING . OBRACE $@2 chain_param CBRACE func_block

    OBRACE  shift, and go to state 74


state 45

   21 decl_func: NAME COLON INTEGER . OBRACE $@1 chain_param CBRACE func_block

    OBRACE  shift, and go to state 75


state 46

   48 assign: NAME ASSIGN expr . SEMICOLON

    SEMICOLON  shift, and go to state 76


state 47

   71 mexpr: NAME RECOPENBRACE . mexpr RECCLOSEBRACE

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 77


state 48

   73 mexpr: NAME OBRACE . $@5 act_params CBRACE

    $default  reduce using rule 72 ($@5)

    $@5  go to state 78


state 49

   69 mexpr: STRINGCONST RECOPENBRACE . mexpr RECCLOSEBRACE

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 79


state 50

   53 mexpr: mexpr . MUL mexpr
   54      | mexpr . DIV mexpr
   55      | mexpr . ADD mexpr
   56      | mexpr . SUB mexpr
   57      | mexpr . AND mexpr
   58      | mexpr . OR mexpr
   59      | mexpr . LT mexpr
   60      | mexpr . LE mexpr
   61      | mexpr . GT mexpr
   62      | mexpr . GE mexpr
   63      | mexpr . EQ mexpr
   64      | mexpr . NE mexpr
   66      | OBRACE mexpr . CBRACE

    CBRACE  shift, and go to state 80
    OR      shift, and go to state 53
    AND     shift, and go to state 54
    NE      shift, and go to state 55
    EQ      shift, and go to state 56
    GE      shift, and go to state 57
    LE      shift, and go to state 58
    GT      shift, and go to state 59
    LT      shift, and go to state 60
    SUB     shift, and go to state 61
    ADD     shift, and go to state 62
    DIV     shift, and go to state 63
    MUL     shift, and go to state 64


state 51

   53 mexpr: mexpr . MUL mexpr
   54      | mexpr . DIV mexpr
   55      | mexpr . ADD mexpr
   56      | mexpr . SUB mexpr
   57      | mexpr . AND mexpr
   58      | mexpr . OR mexpr
   59      | mexpr . LT mexpr
   60      | mexpr . LE mexpr
   61      | mexpr . GT mexpr
   62      | mexpr . GE mexpr
   63      | mexpr . EQ mexpr
   64      | mexpr . NE mexpr
   65      | NOT mexpr .

    NE   shift, and go to state 55
    EQ   shift, and go to state 56
    GE   shift, and go to state 57
    LE   shift, and go to state 58
    GT   shift, and go to state 59
    LT   shift, and go to state 60
    SUB  shift, and go to state 61
    ADD  shift, and go to state 62
    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 65 (mexpr)


state 52

   81 cond: IF expr $@6 . THEN block $@7 ELSE block

    THEN  shift, and go to state 81


state 53

   58 mexpr: mexpr OR . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 82


state 54

   57 mexpr: mexpr AND . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 83


state 55

   64 mexpr: mexpr NE . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 84


state 56

   63 mexpr: mexpr EQ . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 85


state 57

   62 mexpr: mexpr GE . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 86


state 58

   60 mexpr: mexpr LE . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 87


state 59

   61 mexpr: mexpr GT . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 88


state 60

   59 mexpr: mexpr LT . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 89


state 61

   56 mexpr: mexpr SUB . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 90


state 62

   55 mexpr: mexpr ADD . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 91


state 63

   54 mexpr: mexpr DIV . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 92


state 64

   53 mexpr: mexpr MUL . mexpr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    mexpr  go to state 93


state 65

   49 io: READ OBRACE NAME . CBRACE SEMICOLON

    CBRACE  shift, and go to state 94


state 66

   50 io: WRITE OBRACE expr . CBRACE SEMICOLON

    CBRACE  shift, and go to state 95


state 67

   19 decl_label: LABEL NAME SEMICOLON .

    $default  reduce using rule 19 (decl_label)


state 68

   51 goto: GOTO NAME SEMICOLON .

    $default  reduce using rule 51 (goto)


state 69

   14 decl_var: namelist COLON STRING . SEMICOLON

    SEMICOLON  shift, and go to state 96


state 70

   15 decl_var: namelist COLON INTEGER . SEMICOLON

    SEMICOLON  shift, and go to state 97


state 71

   16 namelist: namelist COMA NAME .

    $default  reduce using rule 16 (namelist)


state 72

   84 cycle: $@8 WHILE expr . $@9 LOOP commands POOL

    $default  reduce using rule 83 ($@9)

    $@9  go to state 98


state 73

   18 decl_ref: NAME REF NAME COLON . type SEMICOLON

    STRING   shift, and go to state 99
    INTEGER  shift, and go to state 100

    type  go to state 101


state 74

   23 decl_func: NAME COLON STRING OBRACE . $@2 chain_param CBRACE func_block

    $default  reduce using rule 22 ($@2)

    $@2  go to state 102


state 75

   21 decl_func: NAME COLON INTEGER OBRACE . $@1 chain_param CBRACE func_block

    $default  reduce using rule 20 ($@1)

    $@1  go to state 103


state 76

   48 assign: NAME ASSIGN expr SEMICOLON .

    $default  reduce using rule 48 (assign)


state 77

   53 mexpr: mexpr . MUL mexpr
   54      | mexpr . DIV mexpr
   55      | mexpr . ADD mexpr
   56      | mexpr . SUB mexpr
   57      | mexpr . AND mexpr
   58      | mexpr . OR mexpr
   59      | mexpr . LT mexpr
   60      | mexpr . LE mexpr
   61      | mexpr . GT mexpr
   62      | mexpr . GE mexpr
   63      | mexpr . EQ mexpr
   64      | mexpr . NE mexpr
   71      | NAME RECOPENBRACE mexpr . RECCLOSEBRACE

    RECCLOSEBRACE  shift, and go to state 104
    OR             shift, and go to state 53
    AND            shift, and go to state 54
    NE             shift, and go to state 55
    EQ             shift, and go to state 56
    GE             shift, and go to state 57
    LE             shift, and go to state 58
    GT             shift, and go to state 59
    LT             shift, and go to state 60
    SUB            shift, and go to state 61
    ADD            shift, and go to state 62
    DIV            shift, and go to state 63
    MUL            shift, and go to state 64


state 78

   73 mexpr: NAME OBRACE $@5 . act_params CBRACE

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    $default  reduce using rule 74 (act_params)

    expr        go to state 105
    mexpr       go to state 33
    act_params  go to state 106


state 79

   53 mexpr: mexpr . MUL mexpr
   54      | mexpr . DIV mexpr
   55      | mexpr . ADD mexpr
   56      | mexpr . SUB mexpr
   57      | mexpr . AND mexpr
   58      | mexpr . OR mexpr
   59      | mexpr . LT mexpr
   60      | mexpr . LE mexpr
   61      | mexpr . GT mexpr
   62      | mexpr . GE mexpr
   63      | mexpr . EQ mexpr
   64      | mexpr . NE mexpr
   69      | STRINGCONST RECOPENBRACE mexpr . RECCLOSEBRACE

    RECCLOSEBRACE  shift, and go to state 107
    OR             shift, and go to state 53
    AND            shift, and go to state 54
    NE             shift, and go to state 55
    EQ             shift, and go to state 56
    GE             shift, and go to state 57
    LE             shift, and go to state 58
    GT             shift, and go to state 59
    LT             shift, and go to state 60
    SUB            shift, and go to state 61
    ADD            shift, and go to state 62
    DIV            shift, and go to state 63
    MUL            shift, and go to state 64


state 80

   66 mexpr: OBRACE mexpr CBRACE .

    $default  reduce using rule 66 (mexpr)


state 81

   81 cond: IF expr $@6 THEN . block $@7 ELSE block

    BLOCK  shift, and go to state 108

    block  go to state 109


state 82

   53 mexpr: mexpr . MUL mexpr
   54      | mexpr . DIV mexpr
   55      | mexpr . ADD mexpr
   56      | mexpr . SUB mexpr
   57      | mexpr . AND mexpr
   58      | mexpr . OR mexpr
   58      | mexpr OR mexpr .
   59      | mexpr . LT mexpr
   60      | mexpr . LE mexpr
   61      | mexpr . GT mexpr
   62      | mexpr . GE mexpr
   63      | mexpr . EQ mexpr
   64      | mexpr . NE mexpr

    NE   shift, and go to state 55
    EQ   shift, and go to state 56
    GE   shift, and go to state 57
    LE   shift, and go to state 58
    GT   shift, and go to state 59
    LT   shift, and go to state 60
    SUB  shift, and go to state 61
    ADD  shift, and go to state 62
    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 58 (mexpr)


state 83

   53 mexpr: mexpr . MUL mexpr
   54      | mexpr . DIV mexpr
   55      | mexpr . ADD mexpr
   56      | mexpr . SUB mexpr
   57      | mexpr . AND mexpr
   57      | mexpr AND mexpr .
   58      | mexpr . OR mexpr
   59      | mexpr . LT mexpr
   60      | mexpr . LE mexpr
   61      | mexpr . GT mexpr
   62      | mexpr . GE mexpr
   63      | mexpr . EQ mexpr
   64      | mexpr . NE mexpr

    NE   shift, and go to state 55
    EQ   shift, and go to state 56
    GE   shift, and go to state 57
    LE   shift, and go to state 58
    GT   shift, and go to state 59
    LT   shift, and go to state 60
    SUB  shift, and go to state 61
    ADD  shift, and go to state 62
    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 57 (mexpr)


state 84

   53 mexpr: mexpr . MUL mexpr
   54      | mexpr . DIV mexpr
   55      | mexpr . ADD mexpr
   56      | mexpr . SUB mexpr
   57      | mexpr . AND mexpr
   58      | mexpr . OR mexpr
   59      | mexpr . LT mexpr
   60      | mexpr . LE mexpr
   61      | mexpr . GT mexpr
   62      | mexpr . GE mexpr
   63      | mexpr . EQ mexpr
   64      | mexpr . NE mexpr
   64      | mexpr NE mexpr .

    SUB  shift, and go to state 61
    ADD  shift, and go to state 62
    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 64 (mexpr)


state 85

   53 mexpr: mexpr . MUL mexpr
   54      | mexpr . DIV mexpr
   55      | mexpr . ADD mexpr
   56      | mexpr . SUB mexpr
   57      | mexpr . AND mexpr
   58      | mexpr . OR mexpr
   59      | mexpr . LT mexpr
   60      | mexpr . LE mexpr
   61      | mexpr . GT mexpr
   62      | mexpr . GE mexpr
   63      | mexpr . EQ mexpr
   63      | mexpr EQ mexpr .
   64      | mexpr . NE mexpr

    SUB  shift, and go to state 61
    ADD  shift, and go to state 62
    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 63 (mexpr)


state 86

   53 mexpr: mexpr . MUL mexpr
   54      | mexpr . DIV mexpr
   55      | mexpr . ADD mexpr
   56      | mexpr . SUB mexpr
   57      | mexpr . AND mexpr
   58      | mexpr . OR mexpr
   59      | mexpr . LT mexpr
   60      | mexpr . LE mexpr
   61      | mexpr . GT mexpr
   62      | mexpr . GE mexpr
   62      | mexpr GE mexpr .
   63      | mexpr . EQ mexpr
   64      | mexpr . NE mexpr

    SUB  shift, and go to state 61
    ADD  shift, and go to state 62
    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 62 (mexpr)


state 87

   53 mexpr: mexpr . MUL mexpr
   54      | mexpr . DIV mexpr
   55      | mexpr . ADD mexpr
   56      | mexpr . SUB mexpr
   57      | mexpr . AND mexpr
   58      | mexpr . OR mexpr
   59      | mexpr . LT mexpr
   60      | mexpr . LE mexpr
   60      | mexpr LE mexpr .
   61      | mexpr . GT mexpr
   62      | mexpr . GE mexpr
   63      | mexpr . EQ mexpr
   64      | mexpr . NE mexpr

    SUB  shift, and go to state 61
    ADD  shift, and go to state 62
    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 60 (mexpr)


state 88

   53 mexpr: mexpr . MUL mexpr
   54      | mexpr . DIV mexpr
   55      | mexpr . ADD mexpr
   56      | mexpr . SUB mexpr
   57      | mexpr . AND mexpr
   58      | mexpr . OR mexpr
   59      | mexpr . LT mexpr
   60      | mexpr . LE mexpr
   61      | mexpr . GT mexpr
   61      | mexpr GT mexpr .
   62      | mexpr . GE mexpr
   63      | mexpr . EQ mexpr
   64      | mexpr . NE mexpr

    SUB  shift, and go to state 61
    ADD  shift, and go to state 62
    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 61 (mexpr)


state 89

   53 mexpr: mexpr . MUL mexpr
   54      | mexpr . DIV mexpr
   55      | mexpr . ADD mexpr
   56      | mexpr . SUB mexpr
   57      | mexpr . AND mexpr
   58      | mexpr . OR mexpr
   59      | mexpr . LT mexpr
   59      | mexpr LT mexpr .
   60      | mexpr . LE mexpr
   61      | mexpr . GT mexpr
   62      | mexpr . GE mexpr
   63      | mexpr . EQ mexpr
   64      | mexpr . NE mexpr

    SUB  shift, and go to state 61
    ADD  shift, and go to state 62
    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 59 (mexpr)


state 90

   53 mexpr: mexpr . MUL mexpr
   54      | mexpr . DIV mexpr
   55      | mexpr . ADD mexpr
   56      | mexpr . SUB mexpr
   56      | mexpr SUB mexpr .
   57      | mexpr . AND mexpr
   58      | mexpr . OR mexpr
   59      | mexpr . LT mexpr
   60      | mexpr . LE mexpr
   61      | mexpr . GT mexpr
   62      | mexpr . GE mexpr
   63      | mexpr . EQ mexpr
   64      | mexpr . NE mexpr

    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 56 (mexpr)


state 91

   53 mexpr: mexpr . MUL mexpr
   54      | mexpr . DIV mexpr
   55      | mexpr . ADD mexpr
   55      | mexpr ADD mexpr .
   56      | mexpr . SUB mexpr
   57      | mexpr . AND mexpr
   58      | mexpr . OR mexpr
   59      | mexpr . LT mexpr
   60      | mexpr . LE mexpr
   61      | mexpr . GT mexpr
   62      | mexpr . GE mexpr
   63      | mexpr . EQ mexpr
   64      | mexpr . NE mexpr

    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 55 (mexpr)


state 92

   53 mexpr: mexpr . MUL mexpr
   54      | mexpr . DIV mexpr
   54      | mexpr DIV mexpr .
   55      | mexpr . ADD mexpr
   56      | mexpr . SUB mexpr
   57      | mexpr . AND mexpr
   58      | mexpr . OR mexpr
   59      | mexpr . LT mexpr
   60      | mexpr . LE mexpr
   61      | mexpr . GT mexpr
   62      | mexpr . GE mexpr
   63      | mexpr . EQ mexpr
   64      | mexpr . NE mexpr

    $default  reduce using rule 54 (mexpr)


state 93

   53 mexpr: mexpr . MUL mexpr
   53      | mexpr MUL mexpr .
   54      | mexpr . DIV mexpr
   55      | mexpr . ADD mexpr
   56      | mexpr . SUB mexpr
   57      | mexpr . AND mexpr
   58      | mexpr . OR mexpr
   59      | mexpr . LT mexpr
   60      | mexpr . LE mexpr
   61      | mexpr . GT mexpr
   62      | mexpr . GE mexpr
   63      | mexpr . EQ mexpr
   64      | mexpr . NE mexpr

    $default  reduce using rule 53 (mexpr)


state 94

   49 io: READ OBRACE NAME CBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 110


state 95

   50 io: WRITE OBRACE expr CBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 111


state 96

   14 decl_var: namelist COLON STRING SEMICOLON .

    $default  reduce using rule 14 (decl_var)


state 97

   15 decl_var: namelist COLON INTEGER SEMICOLON .

    $default  reduce using rule 15 (decl_var)


state 98

   84 cycle: $@8 WHILE expr $@9 . LOOP commands POOL

    LOOP  shift, and go to state 112


state 99

   12 type: STRING .

    $default  reduce using rule 12 (type)


state 100

   13 type: INTEGER .

    $default  reduce using rule 13 (type)


state 101

   18 decl_ref: NAME REF NAME COLON type . SEMICOLON

    SEMICOLON  shift, and go to state 113


state 102

   23 decl_func: NAME COLON STRING OBRACE $@2 . chain_param CBRACE func_block

    NAME  shift, and go to state 114

    chain_param    go to state 115
    namelist_decl  go to state 116


state 103

   21 decl_func: NAME COLON INTEGER OBRACE $@1 . chain_param CBRACE func_block

    NAME  shift, and go to state 114

    chain_param    go to state 117
    namelist_decl  go to state 116


state 104

   71 mexpr: NAME RECOPENBRACE mexpr RECCLOSEBRACE .

    $default  reduce using rule 71 (mexpr)


state 105

   76 act_params: expr .

    $default  reduce using rule 76 (act_params)


state 106

   73 mexpr: NAME OBRACE $@5 act_params . CBRACE
   75 act_params: act_params . COMA expr

    COMA    shift, and go to state 118
    CBRACE  shift, and go to state 119


state 107

   69 mexpr: STRINGCONST RECOPENBRACE mexpr RECCLOSEBRACE .

    $default  reduce using rule 69 (mexpr)


state 108

   41 block: BLOCK . commands KCOLB

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    GOTO   shift, and go to state 6

    $default  reduce using rule 82 ($@8)

    commands    go to state 120
    command     go to state 9
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@8         go to state 23


state 109

   81 cond: IF expr $@6 THEN block . $@7 ELSE block

    $default  reduce using rule 80 ($@7)

    $@7  go to state 121


state 110

   49 io: READ OBRACE NAME CBRACE SEMICOLON .

    $default  reduce using rule 49 (io)


state 111

   50 io: WRITE OBRACE expr CBRACE SEMICOLON .

    $default  reduce using rule 50 (io)


state 112

   84 cycle: $@8 WHILE expr $@9 LOOP . commands POOL

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    GOTO   shift, and go to state 6

    $default  reduce using rule 82 ($@8)

    commands    go to state 122
    command     go to state 9
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@8         go to state 23


state 113

   18 decl_ref: NAME REF NAME COLON type SEMICOLON .

    $default  reduce using rule 18 (decl_ref)


state 114

   32 chain_param: NAME . REF COLON INTEGER
   33            | NAME . REF COLON INTEGER SEMICOLON
   34            | NAME . REF COLON STRING
   40 namelist_decl: NAME .

    REF  shift, and go to state 123

    $default  reduce using rule 40 (namelist_decl)


state 115

   23 decl_func: NAME COLON STRING OBRACE $@2 chain_param . CBRACE func_block
   24 chain_param: chain_param . namelist_decl COLON INTEGER
   25            | chain_param . namelist_decl COLON INTEGER SEMICOLON
   26            | chain_param . namelist_decl COLON STRING
   27            | chain_param . namelist_decl COLON STRING SEMICOLON
   28            | chain_param . NAME REF COLON INTEGER SEMICOLON
   29            | chain_param . NAME REF COLON INTEGER
   30            | chain_param . NAME REF COLON STRING
   31            | chain_param . NAME REF COLON STRING SEMICOLON

    NAME    shift, and go to state 124
    CBRACE  shift, and go to state 125

    namelist_decl  go to state 126


state 116

   35 chain_param: namelist_decl . COLON INTEGER SEMICOLON
   36            | namelist_decl . COLON INTEGER
   37            | namelist_decl . COLON STRING SEMICOLON
   38            | namelist_decl . COLON STRING
   39 namelist_decl: namelist_decl . COMA NAME

    COLON  shift, and go to state 127
    COMA   shift, and go to state 128


state 117

   21 decl_func: NAME COLON INTEGER OBRACE $@1 chain_param . CBRACE func_block
   24 chain_param: chain_param . namelist_decl COLON INTEGER
   25            | chain_param . namelist_decl COLON INTEGER SEMICOLON
   26            | chain_param . namelist_decl COLON STRING
   27            | chain_param . namelist_decl COLON STRING SEMICOLON
   28            | chain_param . NAME REF COLON INTEGER SEMICOLON
   29            | chain_param . NAME REF COLON INTEGER
   30            | chain_param . NAME REF COLON STRING
   31            | chain_param . NAME REF COLON STRING SEMICOLON

    NAME    shift, and go to state 124
    CBRACE  shift, and go to state 129

    namelist_decl  go to state 126


state 118

   75 act_params: act_params COMA . expr

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr   go to state 130
    mexpr  go to state 33


state 119

   73 mexpr: NAME OBRACE $@5 act_params CBRACE .

    $default  reduce using rule 73 (mexpr)


state 120

    3 commands: commands . command
   41 block: BLOCK commands . KCOLB

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    KCOLB  shift, and go to state 131
    GOTO   shift, and go to state 6

    $default  reduce using rule 82 ($@8)

    command     go to state 39
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@8         go to state 23


state 121

   81 cond: IF expr $@6 THEN block $@7 . ELSE block

    ELSE  shift, and go to state 132


state 122

    3 commands: commands . command
   84 cycle: $@8 WHILE expr $@9 LOOP commands . POOL

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    POOL   shift, and go to state 133
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    GOTO   shift, and go to state 6

    $default  reduce using rule 82 ($@8)

    command     go to state 39
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@8         go to state 23


state 123

   32 chain_param: NAME REF . COLON INTEGER
   33            | NAME REF . COLON INTEGER SEMICOLON
   34            | NAME REF . COLON STRING

    COLON  shift, and go to state 134


state 124

   28 chain_param: chain_param NAME . REF COLON INTEGER SEMICOLON
   29            | chain_param NAME . REF COLON INTEGER
   30            | chain_param NAME . REF COLON STRING
   31            | chain_param NAME . REF COLON STRING SEMICOLON
   40 namelist_decl: NAME .

    REF  shift, and go to state 135

    $default  reduce using rule 40 (namelist_decl)


state 125

   23 decl_func: NAME COLON STRING OBRACE $@2 chain_param CBRACE . func_block

    BLOCK  shift, and go to state 136

    func_block  go to state 137


state 126

   24 chain_param: chain_param namelist_decl . COLON INTEGER
   25            | chain_param namelist_decl . COLON INTEGER SEMICOLON
   26            | chain_param namelist_decl . COLON STRING
   27            | chain_param namelist_decl . COLON STRING SEMICOLON
   39 namelist_decl: namelist_decl . COMA NAME

    COLON  shift, and go to state 138
    COMA   shift, and go to state 128


state 127

   35 chain_param: namelist_decl COLON . INTEGER SEMICOLON
   36            | namelist_decl COLON . INTEGER
   37            | namelist_decl COLON . STRING SEMICOLON
   38            | namelist_decl COLON . STRING

    STRING   shift, and go to state 139
    INTEGER  shift, and go to state 140


state 128

   39 namelist_decl: namelist_decl COMA . NAME

    NAME  shift, and go to state 141


state 129

   21 decl_func: NAME COLON INTEGER OBRACE $@1 chain_param CBRACE . func_block

    BLOCK  shift, and go to state 136

    func_block  go to state 142


state 130

   75 act_params: act_params COMA expr .

    $default  reduce using rule 75 (act_params)


state 131

   41 block: BLOCK commands KCOLB .

    $default  reduce using rule 41 (block)


state 132

   81 cond: IF expr $@6 THEN block $@7 ELSE . block

    BLOCK  shift, and go to state 108

    block  go to state 143


state 133

   84 cycle: $@8 WHILE expr $@9 LOOP commands POOL .

    $default  reduce using rule 84 (cycle)


state 134

   32 chain_param: NAME REF COLON . INTEGER
   33            | NAME REF COLON . INTEGER SEMICOLON
   34            | NAME REF COLON . STRING

    STRING   shift, and go to state 144
    INTEGER  shift, and go to state 145


state 135

   28 chain_param: chain_param NAME REF . COLON INTEGER SEMICOLON
   29            | chain_param NAME REF . COLON INTEGER
   30            | chain_param NAME REF . COLON STRING
   31            | chain_param NAME REF . COLON STRING SEMICOLON

    COLON  shift, and go to state 146


state 136

   44 func_block: BLOCK . $@3 program RETURN expr $@4 SEMICOLON KCOLB

    $default  reduce using rule 42 ($@3)

    $@3  go to state 147


state 137

   23 decl_func: NAME COLON STRING OBRACE $@2 chain_param CBRACE func_block .

    $default  reduce using rule 23 (decl_func)


state 138

   24 chain_param: chain_param namelist_decl COLON . INTEGER
   25            | chain_param namelist_decl COLON . INTEGER SEMICOLON
   26            | chain_param namelist_decl COLON . STRING
   27            | chain_param namelist_decl COLON . STRING SEMICOLON

    STRING   shift, and go to state 148
    INTEGER  shift, and go to state 149


state 139

   37 chain_param: namelist_decl COLON STRING . SEMICOLON
   38            | namelist_decl COLON STRING .

    SEMICOLON  shift, and go to state 150

    $default  reduce using rule 38 (chain_param)


state 140

   35 chain_param: namelist_decl COLON INTEGER . SEMICOLON
   36            | namelist_decl COLON INTEGER .

    SEMICOLON  shift, and go to state 151

    $default  reduce using rule 36 (chain_param)


state 141

   39 namelist_decl: namelist_decl COMA NAME .

    $default  reduce using rule 39 (namelist_decl)


state 142

   21 decl_func: NAME COLON INTEGER OBRACE $@1 chain_param CBRACE func_block .

    $default  reduce using rule 21 (decl_func)


state 143

   81 cond: IF expr $@6 THEN block $@7 ELSE block .

    $default  reduce using rule 81 (cond)


state 144

   34 chain_param: NAME REF COLON STRING .

    $default  reduce using rule 34 (chain_param)


state 145

   32 chain_param: NAME REF COLON INTEGER .
   33            | NAME REF COLON INTEGER . SEMICOLON

    SEMICOLON  shift, and go to state 152

    $default  reduce using rule 32 (chain_param)


state 146

   28 chain_param: chain_param NAME REF COLON . INTEGER SEMICOLON
   29            | chain_param NAME REF COLON . INTEGER
   30            | chain_param NAME REF COLON . STRING
   31            | chain_param NAME REF COLON . STRING SEMICOLON

    STRING   shift, and go to state 153
    INTEGER  shift, and go to state 154


state 147

   44 func_block: BLOCK $@3 . program RETURN expr $@4 SEMICOLON KCOLB

    NAME   shift, and go to state 1
    IF     shift, and go to state 2
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    LABEL  shift, and go to state 5
    GOTO   shift, and go to state 6

    WHILE     reduce using rule 82 ($@8)
    $default  reduce using rule 1 (program)

    program     go to state 155
    commands    go to state 8
    command     go to state 9
    decl        go to state 10
    decl_var    go to state 11
    namelist    go to state 12
    decl_ref    go to state 13
    decl_label  go to state 14
    decl_func   go to state 15
    action      go to state 16
    assign      go to state 17
    io          go to state 18
    goto        go to state 19
    control     go to state 20
    cond        go to state 21
    cycle       go to state 22
    $@8         go to state 23


state 148

   26 chain_param: chain_param namelist_decl COLON STRING .
   27            | chain_param namelist_decl COLON STRING . SEMICOLON

    SEMICOLON  shift, and go to state 156

    $default  reduce using rule 26 (chain_param)


state 149

   24 chain_param: chain_param namelist_decl COLON INTEGER .
   25            | chain_param namelist_decl COLON INTEGER . SEMICOLON

    SEMICOLON  shift, and go to state 157

    $default  reduce using rule 24 (chain_param)


state 150

   37 chain_param: namelist_decl COLON STRING SEMICOLON .

    $default  reduce using rule 37 (chain_param)


state 151

   35 chain_param: namelist_decl COLON INTEGER SEMICOLON .

    $default  reduce using rule 35 (chain_param)


state 152

   33 chain_param: NAME REF COLON INTEGER SEMICOLON .

    $default  reduce using rule 33 (chain_param)


state 153

   30 chain_param: chain_param NAME REF COLON STRING .
   31            | chain_param NAME REF COLON STRING . SEMICOLON

    SEMICOLON  shift, and go to state 158

    $default  reduce using rule 30 (chain_param)


state 154

   28 chain_param: chain_param NAME REF COLON INTEGER . SEMICOLON
   29            | chain_param NAME REF COLON INTEGER .

    SEMICOLON  shift, and go to state 159

    $default  reduce using rule 29 (chain_param)


state 155

   44 func_block: BLOCK $@3 program . RETURN expr $@4 SEMICOLON KCOLB

    RETURN  shift, and go to state 160


state 156

   27 chain_param: chain_param namelist_decl COLON STRING SEMICOLON .

    $default  reduce using rule 27 (chain_param)


state 157

   25 chain_param: chain_param namelist_decl COLON INTEGER SEMICOLON .

    $default  reduce using rule 25 (chain_param)


state 158

   31 chain_param: chain_param NAME REF COLON STRING SEMICOLON .

    $default  reduce using rule 31 (chain_param)


state 159

   28 chain_param: chain_param NAME REF COLON INTEGER SEMICOLON .

    $default  reduce using rule 28 (chain_param)


state 160

   44 func_block: BLOCK $@3 program RETURN . expr $@4 SEMICOLON KCOLB

    NUMBER       shift, and go to state 27
    NAME         shift, and go to state 28
    STRINGCONST  shift, and go to state 29
    OBRACE       shift, and go to state 30
    NOT          shift, and go to state 31

    expr   go to state 161
    mexpr  go to state 33


state 161

   44 func_block: BLOCK $@3 program RETURN expr . $@4 SEMICOLON KCOLB

    $default  reduce using rule 43 ($@4)

    $@4  go to state 162


state 162

   44 func_block: BLOCK $@3 program RETURN expr $@4 . SEMICOLON KCOLB

    SEMICOLON  shift, and go to state 163


state 163

   44 func_block: BLOCK $@3 program RETURN expr $@4 SEMICOLON . KCOLB

    KCOLB  shift, and go to state 164


state 164

   44 func_block: BLOCK $@3 program RETURN expr $@4 SEMICOLON KCOLB .

    $default  reduce using rule 44 (func_block)
